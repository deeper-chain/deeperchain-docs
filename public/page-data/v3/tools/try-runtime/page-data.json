{
    "componentChunkName": "component---src-templates-kb-template-tsx",
    "path": "/v3/tools/try-runtime/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/v3/tools/try-runtime","title":"Try Runtime","hideNav":null,"section":"docs","category":"tools"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Try Runtime\",\n  \"slug\": \"/v3/tools/try-runtime\",\n  \"version\": 3,\n  \"section\": \"docs\",\n  \"category\": \"tools\",\n  \"keywords\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Message = makeShortcode(\"Message\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" tool is built to query a snapshot of runtime storage, using an \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_state_machine/struct.TestExternalities.html\"\n  }, \"in-memory-\\nexternalities\"), \" to store state. In this way,\\nit enables runtime engineers to write tests for a specified runtime state, for testing against real\\nchain state \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"before\"), \" going to production. It is designed to be used as a command line interface to\\nspecify at which block to query state.\"), mdx(\"p\", null, \"In its simplest form, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" is a tool that enables:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Connecting to a remote node and calling into some runtime API.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Scraping the specified state from a node at a given block.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Writing tests for that data.\")), mdx(\"h2\", {\n    \"id\": \"motivation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#motivation\",\n    \"aria-label\": \"motivation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Motivation\"), mdx(\"p\", null, \"The initial motivation for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" came from the need to test runtime changes against state from a real\\nchain. Prior \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_state_machine/struct.TestExternalities.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"TestExternalities\")), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_state_machine/struct.BasicExternalities.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"BasicExternalities\")), \" existed\\nfor writing unit and integrated tests with mock data, but lacked an avenue to test against a chain's actual\\nstate. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" extends \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_state_machine/struct.TestExternalities.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"TestExternalities\")), \" and\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_state_machine/struct.BasicExternalities.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"BasicExternalities\")), \" by scraping state (which is stored with key value pairs) via a\\nnode's RPC endpoints \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://polkadot.js.org/docs/substrate/rpc/#getstoragechildkey-prefixedstoragekey-key-storagekey-at-hash-optionstoragedata\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"getStorage\")), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://polkadot.js.org/docs/substrate/rpc/#getkeyspagedchildkey-prefixedstoragekey-prefix-storagekey-count-u32-startkey-storagekey-at-hash-vecstoragekey\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"getKeysPaged\")), \" and inserting them\\ninto \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TestExternalities\"), \".\"), mdx(\"h2\", {\n    \"id\": \"how-it-works\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#how-it-works\",\n    \"aria-label\": \"how it works permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"How it works\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" tool has its own implementation of externalities called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/remote_externalities/index.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"remote_externalities\")), \"\\nwhich is just a builder wrapper around \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TestExternalities\"), \" that uses a generic \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/advanced/storage\"\n  }, \"key-value store\"), \"\\nwhere data is \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/advanced/scale-codec\"\n  }, \"SCALE encoded\"), \".\"), mdx(\"p\", null, \"The diagram below illustrates the way externalities sits outside a compiled runtime as a means to capture\\nthe storage of that runtime. \"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Storage externalities\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, \"Testing with externalities\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, mdx(\"img\", {\n    parentName: \"td\",\n    \"src\": \"/img/docs/advanced/try-runtime-ext-1.png\",\n    \"alt\": \"image\"\n  })), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": \"center\"\n  }, mdx(\"img\", {\n    parentName: \"td\",\n    \"src\": \"/img/docs/advanced/try-runtime-ext-2.png\",\n    \"alt\": \"image\"\n  }))))), mdx(\"p\", null, \"With \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"remote_externalities\"), \", developers can capture some chain state and run tests on it. Essentially, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RemoteExternalities\"), \"\\nwill populate a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TestExternalities\"), \" with a real chain's data. \"), mdx(\"p\", null, \"In order to query state, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" makes use of Substrate's RPCs, namely \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sc_rpc/state/trait.StateApi.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"StateApi\")), \". In particular:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sc_rpc/state/trait.StateApi.html#tymethod.storage\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"storage\")), \": A method which returns a storage value under the given key.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sc_rpc/state/trait.StateApi.html#tymethod.storage_keys_paged\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"storage_key_paged\")), \": A method which returns the keys with prefix with pagination support.\")), mdx(\"h2\", {\n    \"id\": \"usage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#usage\",\n    \"aria-label\": \"usage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Usage\"), mdx(\"p\", null, \"The most common use case for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" is with storage migrations and runtime upgrades. \"), mdx(\"p\", null, \"There are a number of flags that need to be preferably set on a running node in order to work well with try-runtime\\u2019s\\nexpensive RPC queries, namely:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"set --rpc-max-payload 1000\"), \" to ensure large RPC queries can work.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"set --rpc-cors all\"), \" to ensure ws connections can come through.\")), mdx(Message, {\n    type: \"green\",\n    title: \"Tip\",\n    text: \" Combine `try-runtime` with \\n[`fork-off-substrate`](https://github.com/maxsam4/fork-off-substrate) to test your chain before\\n production. Use `try-runtime` to test your chain's migration and its pre and post states. Then,\\n use `fork-off-substrate` if you want to check that block production continues fine after the\\n migration, and do some other arbitrary testing.\",\n    mdxType: \"Message\"\n  }), mdx(\"h3\", {\n    \"id\": \"calling-into-hooks-from-onruntimeupgrade\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#calling-into-hooks-from-onruntimeupgrade\",\n    \"aria-label\": \"calling into hooks from onruntimeupgrade permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Calling into hooks from \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"OnRuntimeUpgrade\")), mdx(\"p\", null, \"By default, there are two ways of defining a runtime upgrade in the runtime. The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"OnRuntimeUpgrade\"), \" trait provides the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.OnRuntimeUpgrade.html#on_runtime_upgrade\"\n  }, \"different methods\"), \" to achieve this.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"From inside a runtime\"), \". For example:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"struct Custom;\\nimpl OnRuntimeUpgrade for Custom {\\n    fn on_runtime_upgrade() -> Weight {\\n        // -- snip --\\n    }\\n}\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"From inside a pallet\"), \". For example:\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::hooks]\\nimpl<T: Config> Hooks<BlockNumberFor<T>> for Pallet<T> {\\n    fn on_runtime_upgrade() -> Weight {\\n        // -- snip --\\n    }\\n}\\n\")))), mdx(\"p\", null, \"These hooks will specify \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"what should happen upon a runtime upgrade\"), \". For testing purposes, we prefer\\nhaving hooks that allow us to inspect the state \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"before\"), \" and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"after\"), \" a runtime upgrade as well. \"), mdx(\"p\", null, \"These hooks are not available by default, and are only available under a specific feature flag, named\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \". \"), mdx(\"p\", null, \"The new hooks are as follows:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[cfg(feature = \\\"try-runtime\\\")]\\nfn pre_upgrade() -> Result<(), &'static str> { Ok(()) }\\n\\n#[cfg(feature = \\\"try-runtime\\\")]\\nfn post_upgrade() -> Result<(), &'static str> { Ok(()) }\\n\")), mdx(\"h3\", {\n    \"id\": \"helper-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#helper-functions\",\n    \"aria-label\": \"helper functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Helper functions\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.OnRuntimeUpgradeHelpersExt.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"OnRuntimeUpgradeHelpersExt\")), \" are a set of helper functions made available from\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/src/frame_support/traits/hooks.rs.html#109\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"frame_support::hooks\")), \" in order to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" for testing storage migrations.\\nThese include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"storage_key\")), \": Generates a storage key unique to this runtime upgrade. This can be used to communicate\\ndata from pre-upgrade to post-upgrade state and check them.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"set_temp_storage\")), \": Writes some temporary data to a specific storage that can be read (potentially in\\nthe post-upgrade hook).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"get_temp_storage\")), \" : Gets temporary storage data written by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"set_temp_storage\"), \".\")), mdx(\"p\", null, \"Using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_executive/struct.Executive.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"frame_executive::Executive\")), \" struct, these helper functions in action would\\nlook like:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub struct CheckTotalIssuance;\\nimpl OnRuntimeUpgrade for CheckTotalIssuance {\\n    #[cfg(feature = \\\"try-runtime\\\")]\\n    fn post_upgrade() {\\n        // iterate over all accounts, sum their balance and ensure that sum is correct.\\n    }\\n}\\n\\npub struct EnsureAccountsWontDie;\\nimpl OnRuntimeUpgrade for EnsureAccountsWontDie {\\n    #[cfg(feature = \\\"try-runtime\\\")]\\n    fn pre_upgrade() {\\n        let account_count = frame_system::Accounts::<Runtime>::iter().count();\\n        Self::set_temp_storage(account_count, \\\"account_count\\\");\\n    }\\n\\n    #[cfg(feature = \\\"try-runtime\\\")]\\n    fn post_upgrade() {\\n        // ensure that this migration doesn't kill any account.\\n        let post_migration = frame_system::Accounts::<Runtime>::iter().count();\\n        let pre_migration = Self::get_temp_storage::<u32>(\\\"account_count\\\");\\n        ensure!(post_migration == pre_migration, \\\"error ...\\\");\\n    }\\n}\\n\\npub type CheckerMigrations = (EnsureAccountsWontDie, CheckTotalIssuance);\\npub type Executive = Executive<_, _, _, _, (CheckerMigrations)>;\\n\")), mdx(\"h3\", {\n    \"id\": \"cli-interface\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#cli-interface\",\n    \"aria-label\": \"cli interface permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"CLI interface\"), mdx(\"p\", null, \"To use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" from the command line, run your node with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--features=try-runtime\"), \" flag. \"), mdx(\"p\", null, \"The possible sub-commands include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"on-runtime-upgrade\")), \": Executes \\\"tryRuntime_on_runtime_upgrade\\\" against the given runtime state.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"offchain-worker\")), \": Executes \\\"offchainWorkerApi_offchain_worker\\\" against the given runtime state.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"execute-block\")), \": Executes \\\"core_execute_block\\\" using the given block and the runtime state of the parent block.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"follow-chain\")), \": Follows a given chain's finalized blocks and applies to all its extrinsics. This allows the\\nbehavior of a new runtime to be inspected over a long period of time, with real transactions coming as input.\")), mdx(\"p\", null, \"For example, running \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try-runtime\"), \" with the \\\"on-runtime-upgrade\\\" subcommand on a chain\\nrunning locally:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cargo run --release --features=try-runtime try-runtime on-runtime-upgrade live ws://localhost:9944\\n\")), mdx(\"h4\", null, \"Other scenarios\"), mdx(\"p\", null, \"Using it to re-execute code from a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ElectionProviderMultiPhase\"), \" off-chain worker on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost:9944\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"cargo run -- --release \\\\\\n--features=try-runtime \\\\\\ntry-runtime \\\\\\n--execution Wasm \\\\\\n--wasm-execution Compiled \\\\\\noffchain-worker \\\\\\n--header-at 0x491d09f313c707b5096650d76600f063b09835fd820e2916d3f8b0f5b45bec30 \\\\\\nlive \\\\\\n-b 0x491d09f313c707b5096650d76600f063b09835fd820e2916d3f8b0f5b45bec30 \\\\\\n-m ElectionProviderMultiPhase\\n--uri wss://localhost:9944\\n\")), mdx(\"p\", null, \"You can pass in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--help\"), \" flag after each subcommand to see the command's different options.\"), mdx(\"p\", null, \"Run the migrations of the local runtime on the state of SomeChain, for example: \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"RUST_LOG=runtime=trace,try-runtime::cli=trace,executor=trace \\\\\\n    cargo run try-runtime \\\\\\n    --execution Native \\\\\\n    --chain somechain-dev \\\\\\n    on-runtime-upgrade \\\\\\n    live \\\\\\n    --uri wss://rpc.polkadot.io\\n\")), mdx(\"p\", null, \"Running it at a specific block number's state:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"RUST_LOG=runtime=trace,try-runtime::cli=trace,executor=trace \\\\\\n    cargo run try-runtime \\\\\\n    --execution Native \\\\\\n    --chain dev \\\\\\n    --no-spec-name-check \\\\ # mind this one!\\n    on-runtime-upgrade \\\\\\n    live \\\\\\n    --uri wss://rpc.polkadot.io \\\\\\n    --at <block-hash>\\n\")), mdx(\"h2\", {\n    \"id\": \"next-steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#next-steps\",\n    \"aria-label\": \"next steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Next steps\"), mdx(\"h3\", {\n    \"id\": \"learn-more\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#learn-more\",\n    \"aria-label\": \"learn more permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Learn more\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Refer to \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-to-guides/v3/tools/try-runtime\"\n  }, \"this how-to guide\"), \" on how to integrate \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"try-runtime\"), \" to your project.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read more about \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/advanced/storage#storage-value-keys\"\n  }, \"Storage keys\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.OnRuntimeUpgrade.html#on_runtime_upgrade\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"OnRuntimeUpgrade\")), \" FRAME trait\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_executive/struct.Executive.html#method.try_runtime_upgrade\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"try-runtime-upgrade\")), \" from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"frame_executive\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_core/traits/trait.Externalities.html#method.set_storage\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"set_storage\")), \" from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_core::traits::Externalities\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sc_rpc/state/trait.StateApi.html#tymethod.storage_keys_paged\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"storage_keys_paged\")), \" from \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sc_rpc::state::StateApi\"))), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"try-runtime\"), \" in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/fc49802f263529160635471c8a17888846035f5d/frame/staking/src/lib.rs#L1399-L1406\"\n  }, \"FRAME's Staking pallet\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#motivation","title":"Motivation"},{"url":"#how-it-works","title":"How it works"},{"url":"#usage","title":"Usage","items":[{"url":"#calling-into-hooks-from-onruntimeupgrade","title":"Calling into hooks from OnRuntimeUpgrade"},{"url":"#helper-functions","title":"Helper functions"},{"url":"#cli-interface","title":"CLI interface"}]},{"url":"#next-steps","title":"Next steps","items":[{"url":"#learn-more","title":"Learn more"}]},{"url":"#examples","title":"Examples"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/docs/06-tools/c-try-runtime/index.mdx"}},"pageContext":{"slug":"/v3/tools/try-runtime","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/v3/tools/try-runtime/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}