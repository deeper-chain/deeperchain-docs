{
    "componentChunkName": "component---src-templates-kb-template-tsx",
    "path": "/v3/tools/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/v3/tools","title":"Explore Tools","hideNav":null,"section":"docs","category":"tools"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Explore Tools\",\n  \"slug\": \"/v3/tools\",\n  \"version\": 3,\n  \"section\": \"docs\",\n  \"category\": \"tools\",\n  \"keywords\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar RelatedMaterialBlock = makeShortcode(\"RelatedMaterialBlock\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"While there are some tools that are documented more extensively, such as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/tools/subkey\"\n  }, \"Subkey\"), \",\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/tools/memory-profiling\"\n  }, \"Memory Profiling\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/tools/try-runtime\"\n  }, \"Try Runtime\"), \", there exists a\\nnumber of additional tools which are yet to be integrated into Substrate's documentation hub. This page\\nprovides an overview of what these tools are and what they do. \"), mdx(RelatedMaterialBlock, {\n    title: \"SR Tool\",\n    text: \"\\\"srtool\\\" allows building WASM runtimes in a deterministic way, allowing CIs and users to produce \\n  a strictly identical WASM runtime.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/srtool\",\n    mdxType: \"RelatedMaterialBlock\"\n  }), mdx(RelatedMaterialBlock, {\n    title: \"Subxt\",\n    text: \"A library to submit extrinsics to a Substrate node via RPC.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/substrate-subxt\",\n    mdxType: \"RelatedMaterialBlock\"\n  }), mdx(RelatedMaterialBlock, {\n    title: \"Tx Wrapper\",\n    text: \"Tools for FRAME chain builders to publish chain specific offline transaction generation libraries.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/txwrapper-core\",\n    mdxType: \"RelatedMaterialBlock\"\n  }), mdx(RelatedMaterialBlock, {\n    title: \"Sub Flood\",\n    text: \"A tool that floods a Substrate node with transactions.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/sub-flood\",\n    mdxType: \"RelatedMaterialBlock\"\n  }), mdx(RelatedMaterialBlock, {\n    title: \"Substrate Archive\",\n    text: \"A tool Run alongside a Substrate-backed chain to index all Blocks, State, and Extrinsic data into PostgreSQL.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/substrate-archive\",\n    mdxType: \"RelatedMaterialBlock\"\n  }), mdx(RelatedMaterialBlock, {\n    title: \"Sidecar\",\n    text: \"A REST service that makes it easy to interact with blockchain nodes built using Substrate's FRAME framework.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/substrate-api-sidecar\",\n    mdxType: \"RelatedMaterialBlock\"\n  }), mdx(RelatedMaterialBlock, {\n    title: \"Polkadot Launch\",\n    text: \"A simple CLI tool to launch a local Polkadot test network.\",\n    linkText: \"Go to Documentation\",\n    link: \"https://github.com/paritytech/polkadot-launch\",\n    mdxType: \"RelatedMaterialBlock\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/docs/06-tools/0-landing-page/index.mdx"}},"pageContext":{"slug":"/v3/tools","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/v3/tools/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}