{
    "componentChunkName": "component---src-templates-kb-template-tsx",
    "path": "/v3/concepts/extrinsics/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/v3/concepts/extrinsics","title":"Extrinsics","hideNav":null,"section":"docs","category":"concepts"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Extrinsics\",\n  \"slug\": \"/v3/concepts/extrinsics\",\n  \"version\": 3,\n  \"section\": \"docs\",\n  \"category\": \"concepts\",\n  \"keywords\": null\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An extrinsic is a piece of information that comes from outside the chain and is included in a block.\\nExtrinsics fall into three categories: inherents, signed transactions, and unsigned transactions.\"), mdx(\"p\", null, \"Note that \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/runtime/events-and-errors\"\n  }, \"events\"), \" are not extrinsics. The chain emits events for pieces of\\ninformation that are intrinsic to the chain itself. For example, staking rewards are events, not\\nextrinsics, because the reward is triggered by circumstances intrinsic to the chain's logic.\"), mdx(\"h2\", {\n    \"id\": \"block-structure\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#block-structure\",\n    \"aria-label\": \"block structure permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Block structure\"), mdx(\"p\", null, \"A block in Substrate is composed of a header and an array of extrinsics. The header contains a\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"block height, parent hash, extrinsics root, state root, and digest. This section will only focus on\\nthe extrinsics root.\"), mdx(\"p\", null, \"Extrinsics are bundled together into a block as a series to be executed as each is defined in the\\nruntime. The extrinsics root is a cryptographic digest of this series. This serves two purposes.\\nFirst, it prevents any alterations to the series of extrinsics after the header has been built and\\ndistributed. Second, it provides a means of allowing light clients to succinctly verify that any\\ngiven extrinsic did indeed exist in a block given only knowledge of the header.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_runtime/traits/trait.Block.html\"\n  }, \"Block Reference\"))), mdx(\"h2\", {\n    \"id\": \"inherents\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#inherents\",\n    \"aria-label\": \"inherents permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Inherents\"), mdx(\"p\", null, \"Inherents are pieces of information that are not signed and only inserted into a block by the block\\nauthor. They are not gossiped on the network or stored in the transaction queue. There is nothing\\ntechnically preventing a Substrate chain that gossips inherents, but there would be no fee-based\\nspam prevention mechanism.\"), mdx(\"p\", null, \"Inherents represent data that, in an opinionated fashion, describes one of a number of valid pieces\\nof information. They are assumed to be \\\"true\\\" simply because a sufficiently large number of\\nvalidators have agreed on them being reasonable.\"), mdx(\"p\", null, \"For example, the author of the block may insert a timestamp inherent into the block. There is no way\\nto prove that a timestamp is true the way the desire to send funds is proved with a signature.\\nRather, validators accept or reject the block based on how reasonable the other validators find the\\ntimestamp, which may mean it is within some acceptable range of their own system clocks.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_inherents/index.html\"\n  }, \"Inherents Reference\"))), mdx(\"h2\", {\n    \"id\": \"signed-transactions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#signed-transactions\",\n    \"aria-label\": \"signed transactions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Signed transactions\"), mdx(\"p\", null, \"Signed transactions contain a signature of the account that issued the transaction and stands to pay\\na fee to have the transaction included on chain. Because the value of including signed transactions\\non-chain can be recognized prior to execution, they can be gossiped on the network between nodes\\nwith a low risk of spam.\"), mdx(\"p\", null, \"Signed transactions fit the concept of a transaction in Ethereum or Bitcoin.\"), mdx(\"h2\", {\n    \"id\": \"unsigned-transactions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#unsigned-transactions\",\n    \"aria-label\": \"unsigned transactions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Unsigned transactions\"), mdx(\"p\", null, \"Some cases call for unsigned transactions. Use unsigned transactions with care, as their validation\\nlogic can be difficult.\"), mdx(\"p\", null, \"Since the transaction is not signed, there is nobody to pay a fee. Because of this, the transaction\\nqueue lacks economic logic to prevent spam. Unsigned transactions also lack a nonce, making replay\\nprotection difficult. A few transactions warrant using the unsigned variant, but they will require\\nsome form of spam prevention based on a custom implementation of\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/concepts/tx-pool#signed-extension\"\n  }, \"signed extension\"), \", which can exist on unsigned transactions.\"), mdx(\"p\", null, \"An example of unsigned transactions in Substrate is the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/runtime/frame#im-online\"\n  }, \"I'm Online\"), \"\\nheartbeat transaction sent by authorities. The transaction includes a signature from a Session key,\\nwhich does not control funds and therefore cannot pay a fee. The transaction pool controls spam by\\nchecking if a heartbeat has already been submitted in the session.\"), mdx(\"h2\", {\n    \"id\": \"further-reading\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#further-reading\",\n    \"aria-label\": \"further reading permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Further reading\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_runtime/traits/trait.Extrinsic.html\"\n  }, \"Reference Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/concepts/execution\"\n  }, \"Runtime Execution\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/runtime/weights-and-fees\"\n  }, \"Transaction Fees\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/concepts/tx-pool\"\n  }, \"Transaction Pool\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#block-structure","title":"Block structure"},{"url":"#inherents","title":"Inherents"},{"url":"#signed-transactions","title":"Signed transactions"},{"url":"#unsigned-transactions","title":"Unsigned transactions"},{"url":"#further-reading","title":"Further reading"}]},"fileAbsolutePath":"/root/deeperchain-docs/v3/docs/02-concepts/b-extrinsics/index.mdx"}},"pageContext":{"slug":"/v3/concepts/extrinsics","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/v3/concepts/extrinsics/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}