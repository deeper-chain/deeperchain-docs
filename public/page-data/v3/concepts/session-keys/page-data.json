{
    "componentChunkName": "component---src-templates-kb-template-tsx",
    "path": "/v3/concepts/session-keys/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/v3/concepts/session-keys","title":"Session Keys","hideNav":null,"section":"docs","category":"concepts"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Session Keys\",\n  \"slug\": \"/v3/concepts/session-keys\",\n  \"version\": 3,\n  \"section\": \"docs\",\n  \"category\": \"concepts\",\n  \"keywords\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Message = makeShortcode(\"Message\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Substrate provides the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/pallet_session/index.html\"\n  }, \"Session pallet\"), \",\\nwhich allows validators to manage their session keys.\"), mdx(\"p\", null, \"Session keys are \\\"hot keys\\\" that are used by validators to sign consensus-related messages. They are\\nnot meant to be used as account keys that control funds and should only be used for their intended\\npurpose. They can be changed regularly; your Controller only needs to create new session keys by\\nsigning a session's public key and broadcasting this certificate via an extrinsic. Session keys are also\\ndefined generically and made concrete in the runtime.\"), mdx(\"p\", null, \"To create a Session key, validator operators must attest that a key acts on behalf of their Stash\\naccount (stake) and nominators. To do so, they create a new session keys by signing the key with their\\nController key. Then, they inform the chain that this key represents their Controller key by\\npublishing the Session certificate in a transaction on the chain.\"), mdx(\"h2\", {\n    \"id\": \"implementation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#implementation\",\n    \"aria-label\": \"implementation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Implementation\"), mdx(\"p\", null, \"Session keys are used by validators to sign consensus-related messages. \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_session/trait.SessionKeys.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"SessionKeys\")), \"\\nis a generic, indexable type that is made concrete in the runtime.\"), mdx(\"p\", null, \"You can declare any number of Session keys. For example, the default Substrate node uses four. Other\\nchains could have more or fewer depending on what operations the chain expects its validators to\\nperform.\"), mdx(\"p\", null, \"In practice, validators amalgamate all of the session public keys into a single object, sign the set\\nof public keys with a \\\"Controller\\\" account, and submit a transaction to register the keys on chain.\\nThis on-chain registration links a validator \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"node\"), \" with an \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"account\"), \" that holds funds. As such,\\nthat account can be credited with rewards or slashed based on the node's behavior.\"), mdx(\"p\", null, \"The runtime declares what session keys will be implemented with the help of a macro. An\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/src/node_runtime/lib.rs.html#435-442\"\n  }, \"example\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl_opaque_keys! {\\n    pub struct SessionKeys {\\n        pub grandpa: Grandpa,\\n        pub babe: Babe,\\n        pub im_online: ImOnline,\\n        pub authority_discovery: AuthorityDiscovery,\\n    }\\n}\\n\")), mdx(\"p\", null, \"The actual cryptographic curve that each key uses gets defined in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"primitives\"), \". For example,\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/src/sp_consensus_babe/lib.rs.html#44-47\"\n  }, \"BABE's key uses sr25519\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"mod app {\\n      use sp_application_crypto::{app_crypto, key_types::BABE, sr25519};\\n      app_crypto!(sr25519, BABE);\\n}\\n\")), mdx(\"p\", null, \"Typically, these keys are also initially configured in the genesis state to launch your\\nchain with pre-established validators. You can see this demonstrated in the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/tutorials/v3/private-network/\"\n  }, \"private network tutorial\"), \".\"), mdx(\"h3\", {\n    \"id\": \"strongly-typed-wrappers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#strongly-typed-wrappers\",\n    \"aria-label\": \"strongly typed wrappers permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Strongly typed wrappers\"), mdx(\"p\", null, \"The Session keys from a Substrate node could use the same cryptography, but serve \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"very\"), \" different purposes\\nin your runtime logic. To prevent the wrong key being used for the wrong operation, strong\\nRust types wrap these keys, keeping them incompatible with one another and ensuring they are only\\nused for their intended purpose.\"), mdx(\"h2\", {\n    \"id\": \"generation-and-use\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#generation-and-use\",\n    \"aria-label\": \"generation and use permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Generation and use\"), mdx(\"p\", null, \"As a node operator, you can generate keys using the RPC call\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sc_rpc/author/trait.AuthorApi.html#tymethod.rotate_keys\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"author_rotateKeys\")), \".\\nYou will then need to register the new keys on chain using a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/pallet_session/struct.Module.html#method.set_keys\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"session.setKeys\")), \" transaction.\"), mdx(Message, {\n    type: \"yellow\",\n    title: \"Important\",\n    text: \"For increased security, session keys should be changed every session. This can be done by creating \\n  new session keys, putting the session public keys into an extrinsic, and applying this extrinsic on chain.\\n  \",\n    mdxType: \"Message\"\n  }), mdx(\"p\", null, \"Since session keys are hot keys that must be kept online, the individual keys should \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"not\"), \" be used to\\ncontrol funds. All the logic for handling session keys is in the Substrate client, primitives, and\\nSession pallet. If one of the Session keys is compromised, the attacker could commit slashable\\nbehavior.\"), mdx(\"h3\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Follow our\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tutorials/v3/private-network\"\n  }, \"tutorial to create a local network and generate keys\"), \".\")), mdx(\"h3\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Visit the reference docs for the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_session/trait.SessionKeys.html\"\n  }, \"session keys runtime API\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Take a look at the default\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/node_runtime/struct.SessionKeys.html\"\n  }, \"session keys in the Substrate node runtime\"), \".\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Take a look at the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_application_crypto/index.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"sp_application_crypto\")), \",\\ncrate, used for constructing application-specific strongly typed crypto wrappers.\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#implementation","title":"Implementation","items":[{"url":"#strongly-typed-wrappers","title":"Strongly typed wrappers"}]},{"url":"#generation-and-use","title":"Generation and use","items":[{"url":"#examples","title":"Examples"},{"url":"#references","title":"References"}]}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/docs/02-concepts/e-session-keys/index.mdx"}},"pageContext":{"slug":"/v3/concepts/session-keys","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/v3/concepts/session-keys/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}