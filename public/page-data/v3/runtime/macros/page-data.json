{
    "componentChunkName": "component---src-templates-kb-template-tsx",
    "path": "/v3/runtime/macros/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/v3/runtime/macros","title":"Macros","hideNav":null,"section":"docs","category":"runtime"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Macros\",\n  \"slug\": \"/v3/runtime/macros\",\n  \"version\": 3,\n  \"section\": \"docs\",\n  \"category\": \"runtime\",\n  \"keywords\": null\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Message = makeShortcode(\"Message\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"As of January 2021, FRAME based pallets have upgraded their use of macros. Refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#upgrade-guidelines\"\n  }, \"this guide\"), \"\\nto learn about migrating a v1 pallet to v2 and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://hackmd.io/@fscJ0GEvRb2rqALLZB1kfA/SkSerkamt\"\n  }, \"this resource\"), \" to learn more about FRAME's version\\nchanges.\")), mdx(\"p\", null, \"Substrate uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://doc.rust-lang.org/book/ch19-06-macros.html\"\n  }, \"Rust macros\"), \" to aggregate the logic derived from pallets that are implemented for a runtime.\\nThese runtime macros allow developers to focus on runtime logic rather than encoding and decoding on-chain\\nvariables or writing extensive blocks of code to achieve \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/concepts/runtime#core-primitives\"\n  }, \"basic blockchain fundamentals\"), \". This offloads a lot of the heavy lifting from blockchain development efforts and removes the need to duplicate code.\"), mdx(\"p\", null, \"The purpose of this article is to give a basic overview of Rust macros and explain the Substrate macros\\nthat runtime engineers most frequently use.\"), mdx(\"h2\", {\n    \"id\": \"macro-basics\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#macro-basics\",\n    \"aria-label\": \"macro basics permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Macro basics\"), mdx(\"p\", null, \"Put simply, macros are lines of code that write code. They provide the ability to abstract things out without needing to declare complex data structures explicitly.\\nThere are four kinds of macro in Rust:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/book/ch19-06-macros.html#declarative-macros-with-macro_rules-for-general-metaprogramming\"\n  }, \"declarative macros\"), \" (most widely used)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/book/ch19-06-macros.html#how-to-write-a-custom-derive-macro\"\n  }, \"custom derive\"), \" (a type of procedural macro)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/book/ch19-06-macros.html#attribute-like-macros\"\n  }, \"attribute-like macros\"), \" (a type of procedural macro)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/book/ch19-06-macros.html#function-like-macros\"\n  }, \"function-like macros\"), \" (a type of procedural macro)\")), mdx(\"p\", null, \"Most Substrate runtime macros are defined using either \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"declarative macros\"), \" or \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"function-like macros\"), \", with a recent adoption of\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"attribute-like macros\"), \" in FRAME v2 pallets.\"), mdx(Message, {\n    type: \"green\",\n    title: \"Tips to learn more about Substrate runtime macros\",\n    text: \"\\n   - Read the [documentation](/rustdocs/latest/frame_support/index.html#macros) on commonly used macros in FRAME.\\n   - Use [`cargo expand`](https://github.com/dtolnay/cargo-expand) to review a macro's expanded code and understand what's happening under the hood.\\n   - Read more on [macro rules of expression pattern matching](https://danielkeep.github.io/tlborm/book/pim-README.html).\\n  \",\n    mdxType: \"Message\"\n  }), mdx(\"h2\", {\n    \"id\": \"substrate-runtime-macros\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#substrate-runtime-macros\",\n    \"aria-label\": \"substrate runtime macros permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Substrate runtime macros\"), mdx(\"p\", null, \"The following section is a comprehensive explanation of the macros that runtime engineers most frequently encounter.\\nDevelopers who want to know about the implementation details are encouraged to follow the links in\\n\\\"Docs and Notes\\\" sub-sections to better understand how each macro expands.\"), mdx(\"p\", null, \"Substrate Primitives and FRAME both rely on a collection of various types of macros. The following\\nsections will go over each in more detail. Here's a general overview of Substrate macros:\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Macros in the FRAME \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/v3/runtime/frame#support-library\"\n  }, \"Support Library\"), \":\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"frame_support\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/index.html#macros\"\n  }, \"function-like\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/index.html#derives\"\n  }, \"derive\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/index.html#attributes\"\n  }, \"attribute\"), \" macros\")))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Macros in the Substrate \", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"/v3/runtime/frame#system-library\"\n  }, \"System Library\"), \":\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_core\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_core/index.html#macros\"\n  }, \"function-like macros\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_core/index.html#derives\"\n  }, \"derive \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"RuntimeDebug\")), \" macro\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_runtime\"), \":\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_runtime/index.html#macros\"\n  }, \"function-like\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_runtime/index.html#derives\"\n  }, \"derive\"), \" macros\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"serde\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_runtime/index.html#derives\"\n  }, \"function-like\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_api\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_api/index.html#macros\"\n  }, \"function-like\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_std\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_std/index.html#macros\"\n  }, \"function-like\"), \" macros\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_version\"), \": \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_version/index.html#macros\"\n  }, \"function-like\"), \" macros\")), mdx(Message, {\n    type: \"gray\",\n    title: \"Note\",\n    text: \"Refer to `#Substrate dependencies` in the `Cargo.toml` file of the\\n  [node template runtime](https://github.com/substrate-developer-hub/substrate-node-template/blob/master/runtime/Cargo.toml#L21)\\n  to see where these are put to use.\\n  \",\n    mdxType: \"Message\"\n  }), mdx(\"h2\", {\n    \"id\": \"frame-macros-and-attributes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#frame-macros-and-attributes\",\n    \"aria-label\": \"frame macros and attributes permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"FRAME macros and attributes\"), mdx(\"p\", null, \"This sections covers all of the different macros that ship with FRAME. Refer to the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/runtime/frame#pallets\"\n  }, \"structure of a pallet\"), \"\\nto understand the composition of a Substrate pallet.\"), mdx(\"h3\", {\n    \"id\": \"frame_supportpallet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#frame_supportpallet\",\n    \"aria-label\": \"frame_supportpallet permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[frame_support::pallet]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Required to declare a pallet consisting of a set of types, functions, and trait implementations that will later be aggregated by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime\"), \" to build to runtime.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"This is the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html\"\n  }, \"attribute macro\"), \" that allows the pallet to be used in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime!\"), \". This macro\\nis made up of the various attributes that will be used to identify the specific items the pallet requires.\"), mdx(\"p\", null, \"Similar to a derive macro, this macro only expands types and trait implementations by reading the input and its input is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"almost\"), \" never touched. The only exception where this macro\\nmodifies its input (contrary to a derive macro) is:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"when a generic is replaced with a type\"), \". For example, in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet::pallet\"), \" the inner types of the item in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pub struct Pallet<..>(_)\"), \" is replaced by \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PhantomData\"), \"\\nand in \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet::storage\"), \", the first generic \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"_\"), \" is replaced with a type that implements the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"StorageInstance\"), \" trait.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"some item is changed\"), \". For example, when \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet::type_value\"), \" changes the function item into a struct and trait implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"some docs are added when none are provided by the user.\"), \" For example, if no documentation is provided the macro \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet::pallet\"), \" will modify the input to add documentation above the item \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"struct Pallet<T>(_);\"), \".\")), mdx(\"h3\", {\n    \"id\": \"palletconfig\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletconfig\",\n    \"aria-label\": \"palletconfig permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::config]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Required to define the pallet's generics.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"Provides constants that are part of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_system/pallet/trait.Config.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Config\"), \" trait\"), \" and gives information about external tools to use for the runtime.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#config-trait-palletconfig-mandatory\"\n  }, \"Config trait\"))), mdx(\"h3\", {\n    \"id\": \"palletconstant\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletconstant\",\n    \"aria-label\": \"palletconstant permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::constant]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To pass values of associated types to metadata, which allows the value of the type to be used by external tools and third parties. Note that this attribute is only usable from inside a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::config]\"), \" item.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"Provides the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Config\"), \" trait with the types and attributes it needs for the runtime and generates associated metadata.\"), mdx(\"p\", null, \"Adding the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::constant]\"), \" attribute will result in the macro adding to the constant metadata, including: the constant's name; the name of the associated type; the constant's value; and the value returned by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Get::get()\"), \".\"), mdx(\"p\", null, \"For example, we can use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::constant]\"), \" to put \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type MyGetParam\"), \" in metadata:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::config]\\npub trait Config: frame_system::Config {\\n    #[pallet::constant] // puts attributes in metadata\\n    type MyGetParam: Get<u32>;\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See use in the context of \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#config-trait-palletconfig-mandatory\"\n  }, \"#[pallet::config]\"))), mdx(\"h3\", {\n    \"id\": \"palletextra_constants\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletextra_constants\",\n    \"aria-label\": \"palletextra_constants permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::extra_constants]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Optionally, for additional constants one may want to pass to metadata.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"It allows to define some additional constants to put into metadata. For example, you could declare a function that returns a value that will be generated to metadata:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::extra_constants]\\nimpl<T: Config> Pallet<T> {\\n  //Example function using extra_constants\\n  fn example_extra_constants() -> u128 { 4u128 }\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#extra-constants-palletextra_constants-optional\"\n  }, \"documentation\"))), mdx(\"h3\", {\n    \"id\": \"palletpallet\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletpallet\",\n    \"aria-label\": \"palletpallet permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::pallet]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Required to declare the pallet struct place holder, to be later used by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"Generates the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Store\"), \" trait if the attribute is provided, which contains an associated type for each storage item. It takes the form of a more explicit Rust struct module and can be written as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pub struct Pallet<T>(_);\"), \", with the appropriate \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PhantomData\"), \" replacing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_\"), \" to make it generic.\"), mdx(\"p\", null, \"This is an example of its definition:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::pallet]\\n#[pallet::generate_store(pub(super) trait Store)]\\npub struct Pallet<T>(PhantomData<T>);\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#macro-expansion-1\"\n  }, \"macro expansion\"), \" added to the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"struct Pallet<T>\"), \" definition\")), mdx(\"h3\", {\n    \"id\": \"pallethooks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#pallethooks\",\n    \"aria-label\": \"pallethooks permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::hooks]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Required for declaring pallet hooks.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.Hooks.html#provided-methods\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Hooks\")), \" are made available by using the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hooks\"), \" trait.\"), mdx(\"p\", null, \"For example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::hooks]\\nimple<T: Config> Hooks<BlockNumberFor<T>> for Pallet<T> {\\n  // Hooks functions and logic goes here.\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#hooks-pallethooks-mandatory\"\n  }, \"documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#macro-expansion-2\"\n  }, \"macro expansion\"))), mdx(\"h3\", {\n    \"id\": \"palletcall\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletcall\",\n    \"aria-label\": \"palletcall permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::call]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Required, to implement a pallet's dispatchables. Each dispatchable must:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"define a weight with the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"#[pallet::weight($expr)]\"), \" attribute\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"have its first argument as \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"origin: OriginFor<T>\"), \",\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use compact encoding for argument using #\", \"[pallet::compact]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"return \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DispatchResultWithPostInfo\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"DispatchResult\"))), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/concepts/extrinsics\"\n  }, \"Extrinsics\"), \" can use calls to\\ntrigger specific logic. Calls can also be used in on-chain governance, demonstrated by the democracy\\npallet where calls can be voted on.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::call]\"), \" allows to create dispatchable functions which will generate associated items\\nfrom the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"impl\"), \" code blocks. In other words, it aggregates all dispatchable logic using the [\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Call\"), \" enum\\n(/rustdocs/latest/frame_system/pallet/enum.Call.html) which will aggregate all\\ndispatchable calls into a single runtime call.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#call-palletcall-mandatory\"\n  }, \"documentation\"))), mdx(\"h3\", {\n    \"id\": \"palleterror\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palleterror\",\n    \"aria-label\": \"palleterror permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::error]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Optionally, to define error types to be used in dispatchables.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"Puts error variants documentation into metadata.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#error-palleterror-optional\"\n  }, \"documentation\"))), mdx(\"h3\", {\n    \"id\": \"palletevent\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletevent\",\n    \"aria-label\": \"palletevent permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::event]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Optionally, to define a pallet's event types.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"It is similar to errors but it can holds more information. They generate the metadata of the event and add_derive. It uses the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::metadata(..)]\"), \" attribute to define what metadata to put from the events.\"), mdx(\"p\", null, \"For example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::event]\\n#[pallet::metadata(u32 = \\\"SpecialU32\\\")]\\npub enum Event<T: Config> {\\n    Proposed(u32, T::AccountId),\\n}\\n\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#event-palletevent-optional\"\n  }, \"documentation\"))), mdx(\"h3\", {\n    \"id\": \"palletstorage\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#palletstorage\",\n    \"aria-label\": \"palletstorage permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"#\", \"[pallet::storage]\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"Optionally, as it can be used multiple times.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"To define some abstract storage inside runtime storage.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[pallet::storage]\"), \" is using a Rust-like HashMap to do storage, except it takes a Key, Value,\\nHasher, Prefix, QueryKind and an OnEmpty\\nparameter. The prefix generic defines the place where the\\nstorage will store its \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"(key, value)\"), \" pairs (i.e. the trie) and defines the pallet and storage prefix like such:\"), mdx(\"p\", null, \"  \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"concat(twox_128(pallet_prefix), towx_128(storage_prefix))\"), \", replacing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"_\"), \" with the generated prefix implementations\\nof the pallet and storage names.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#storage-palletstorage-optional\"\n  }, \"macro documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/pallet_prelude/struct.StorageMap.html#implementations\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"StorageMap\"), \" implementation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/book/ch08-03-hash-maps.html\"\n  }, \"Rust HashMap syntax\"))), mdx(\"h3\", {\n    \"id\": \"other-attributes\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#other-attributes\",\n    \"aria-label\": \"other attributes permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Other attributes\"), mdx(\"p\", null, \"Other FRAME macro attributes include:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#genesis-config-palletgenesis_config-optional\"\n  }, \"#[pallet::genesis_config]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#type-value-pallettype_value-optional\"\n  }, \"#[pallet::type_value]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#genesis-build-palletgenesis_build-optional\"\n  }, \"#[pallet::genesis_build]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#inherent-palletinherent-optional\"\n  }, \"#[pallet::inherent]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#validate-unsigned-palletvalidate_unsigned-optional\"\n  }, \"#[pallet::validate_unsigned]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/attr.pallet.html#origin-palletorigin-optional\"\n  }, \"#[pallet::origin]\"))), mdx(\"h2\", {\n    \"id\": \"additional-frame-macros\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#additional-frame-macros\",\n    \"aria-label\": \"additional frame macros permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Additional FRAME macros\"), mdx(\"h3\", {\n    \"id\": \"construct_runtime\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#construct_runtime\",\n    \"aria-label\": \"construct_runtime permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"construct_runtime!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To construct Substrate runtime and integrating various pallets into the runtime.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"The macro declares and implements various struct and enum, e.g.\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Runtime\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Event\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Origin\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Call\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GenesisConfig\"), \" etc, and implements various helper traits for these struct types. The macro also\\nadds logics of mapping different events and dispatchable calls from the overarching runtime back to\\na particular pallet.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs and notes\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/macro.construct_runtime.html\"\n  }, \"API Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Runtime\"), \" struct type is defined to represent the Substrate runtime.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Event\"), \" enum type is defined with variants of all pallets that emit events, with helper traits and\\nencoding/decoding traits implemented for the enum. Various conversion traits \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Event\"), \" also\\nimplements \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"TryInto<pallets::Event<Runtime>>\"), \" trait to extract the event out from the enum type.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Origin\"), \" enum type is defined with helper traits, e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"PartialEq\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Clone\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Debug\"), \" implemented.\\nThis enum type defines who calls an extrinsic: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"NONE\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ROOT\"), \", or signed by a particular account.\\nThese three primitive origins are defined by the FRAME System module, but optional FRAME pallets\\nmay also define origins.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Call\"), \" enum type is defined with all integrated pallets as variants. It contains the data and\\nmetadata of each of the integrated pallets, and redirects calls to the specific pallet via\\nimplementing \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"frame_support::traits::UnfilteredDispatchable\"), \" trait.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"GenesisConfig\"), \" struct type is defined and implements \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_runtime::BuildStorage\"), \" trait for\\nbuilding up the storage genesis config.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The macro adopts the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"frame_support::unsigned::ValidateUnsigned\"), \" trait implementation from each\\npallet. If no \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ValidateUnsigned\"), \" trait is implemented in any included pallets, all unsigned\\ntransactions will be rejected.\")), mdx(\"h3\", {\n    \"id\": \"parameter_types\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#parameter_types\",\n    \"aria-label\": \"parameter_types permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"parameter_types!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To declare parameter types to be assigned to pallet configurable trait associated types during\\nruntime construction.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"The macro replaces each parameter specified into a struct type with a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"get()\"), \" function returning its\\nspecified value. Each parameter struct type also implements a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"frame_support::traits::Get<I>\"), \" trait\\nto convert the type to its specified value.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/macro.parameter_types.html\"\n  }, \"API Documentation\"))), mdx(\"h3\", {\n    \"id\": \"impl_outer_origin\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#impl_outer_origin\",\n    \"aria-label\": \"impl_outer_origin permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"impl_outer_origin!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To construct an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Origin\"), \" struct type for a runtime. This macro is typically called automatically by\\nthe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime!\"), \" macro, but developers may call this macro directly to construct a mock\\nruntime for testing that has a less complex structure than an actual runtime.\"), mdx(\"p\", null, \"Each extrinsic call has an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Origin\"), \" type parameter passed, signaling if the call is made from\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NONE\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ROOT\"), \", or a particular account.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"This macro creates an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Origin\"), \" struct type, and implements various helper traits for the type.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/macro.impl_outer_origin.html\"\n  }, \"API Documentation\"))), mdx(\"h3\", {\n    \"id\": \"impl_outer_event\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#impl_outer_event\",\n    \"aria-label\": \"impl_outer_event permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"impl_outer_event!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To construct an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Event\"), \" struct type for a runtime. This macro is typically called automatically by\\nthe \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime!\"), \" macro. However, developers may call this macro directly to construct an\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Event\"), \" enum selecting the specific pallet events they want to listen for. This is useful when\\nconstructing a mock runtime for testing.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"This macro creates an event enum type, implements various helper traits on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Event\"), \" type, including\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"core::clone::Clone\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"core::marker::StructuralPartialEq\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"core::fmt::Debug\"), \", data\\nencoding/decoding traits etc. Finally, the macro implements only the specifying pallet events for\\nthe runtime.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/macro.impl_outer_event.html\"\n  }, \"API Documentation\"))), mdx(\"h3\", {\n    \"id\": \"impl_outer_dispatch\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#impl_outer_dispatch\",\n    \"aria-label\": \"impl_outer_dispatch permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"impl_outer_dispatch!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To implement a meta-dispatch module to dispatch to other dispatchers. This macro is typically called\\nautomatically by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime!\"), \" macro. However, developers may call this macro directly to\\nconstruct a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Call\"), \" enum selecting the specific pallet that it dispatches. This is useful when\\nconstructing a mock runtime for testing.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"This macro creates a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Call\"), \" enum type, implements various helper traits on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Event\"), \" type, including\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Clone\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PartialEq\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RuntimeDebug\"), \" etc. Finally, the macro implements \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GetDispatchInfo\"), \",\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GetCallMetadata\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IsSubType\"), \" traits for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Call\"), \" enum.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/macro.impl_outer_dispatch.html\"\n  }, \"API Documentation\"))), mdx(\"h2\", {\n    \"id\": \"substrate-system-library-macros\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#substrate-system-library-macros\",\n    \"aria-label\": \"substrate system library macros permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Substrate system library macros\"), mdx(\"h3\", {\n    \"id\": \"impl_runtime_apis\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#impl_runtime_apis\",\n    \"aria-label\": \"impl_runtime_apis permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"impl_runtime_apis!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"This macro generates the API implementations for the client side through the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RuntimeApi\"), \" and\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RuntimeApiImpl\"), \" struct type.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"The macro defines the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RuntimeApi\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RuntimeApiImpl\"), \" exposed to the Substrate node client. It\\nprovides implementation details of the RuntimeApiImpl based on the setup and appended user specified\\nimplementation in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RuntimeApiImpl\"), \".\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs and notes\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_api/macro.impl_runtime_apis.html\"\n  }, \"API Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeApi\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeApiImpl\"), \" structs are declared. The macro also implements various helper\\ntraits for \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeApiImpl\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What developers define within \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"impl_runtime_apis!\"), \" macro are appended to the end of\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RuntimeApiImpl\"), \" implementation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To expose version information about the runtime, a constant \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"RUNTIME_API_VERSIONS\"), \" is defined.\\ncontaining the runtime core \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ID\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"VERSION\"), \", metadata \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ID\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"VERSION\"), \", SessionKeys \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ID\"), \"/\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"VERSION\"), \",\\netc.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A public module \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"api\"), \" is defined with a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"dispatch()\"), \" function implemented deciding how various\\nstrings are mapped to metadata or chain lifecycle calls.\")), mdx(\"h3\", {\n    \"id\": \"app_crypto\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#app_crypto\",\n    \"aria-label\": \"app_crypto permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"app_crypto!\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"When to use\")), mdx(\"p\", null, \"To specify cryptographic key pairs and its signature algorithm that are to be managed by a pallet.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"What it does\")), mdx(\"p\", null, \"The macro declares three struct types, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Public\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Signature\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pair\"), \". Aside from having various\\nhelper traits implemented for these three types, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Public\"), \" type is implemented to generating\\nkeypairs, signing and verifying signature, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Signature\"), \" type to hold the signature property given the\\nsignature chosen to be used (e.g. SR25519, ED25519 etc), and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Pair\"), \" type to generate a\\npublic-private key pair from a seed.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Docs and notes\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_application_crypto/macro.app_crypto.html\"\n  }, \"API Documentation\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Public\"), \" struct type is declared, and implements \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_application_crypto::AppKey\"), \" trait defining\\nthe public key type, and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_application_crypto::RuntimeAppPublic\"), \" trait for generating keypairs,\\nsigning, and verifying signatures.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Signature\"), \" struct type is declared, and implements \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"core::hash::Hash\"), \" trait on how the data with\\nthis signature type is hashed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Pair\"), \" struct type is declared to wrap over the crypto pair. This type implements\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_application_crypto::Pair\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"sp_application_crypto::AppKey\"), \" traits determining how it\\ngenerates public-private key pairs from a phrase or seed.\")), mdx(\"h2\", {\n    \"id\": \"references\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#references\",\n    \"aria-label\": \"references permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"References\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/book/ch19-06-macros.html\"\n  }, \"The Rust Programming Language ch 19.5 Macros\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://danielkeep.github.io/tlborm/book\"\n  }, \"The Little Book of Rust Macros\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#macro-basics","title":"Macro basics"},{"url":"#substrate-runtime-macros","title":"Substrate runtime macros"},{"url":"#frame-macros-and-attributes","title":"FRAME macros and attributes","items":[{"url":"#frame_supportpallet","title":"#frame_support::pallet"},{"url":"#palletconfig","title":"#pallet::config"},{"url":"#palletconstant","title":"#pallet::constant"},{"url":"#palletextra_constants","title":"#pallet::extra_constants"},{"url":"#palletpallet","title":"#pallet::pallet"},{"url":"#pallethooks","title":"#pallet::hooks"},{"url":"#palletcall","title":"#pallet::call"},{"url":"#palleterror","title":"#pallet::error"},{"url":"#palletevent","title":"#pallet::event"},{"url":"#palletstorage","title":"#pallet::storage"},{"url":"#other-attributes","title":"Other attributes"}]},{"url":"#additional-frame-macros","title":"Additional FRAME macros","items":[{"url":"#construct_runtime","title":"construct_runtime!"},{"url":"#parameter_types","title":"parameter_types!"},{"url":"#impl_outer_origin","title":"impl_outer_origin!"},{"url":"#impl_outer_event","title":"impl_outer_event!"},{"url":"#impl_outer_dispatch","title":"impl_outer_dispatch!"}]},{"url":"#substrate-system-library-macros","title":"Substrate system library macros","items":[{"url":"#impl_runtime_apis","title":"impl_runtime_apis!"},{"url":"#app_crypto","title":"app_crypto!"}]},{"url":"#references","title":"References"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/docs/03-runtime/b-macros/index.mdx"}},"pageContext":{"slug":"/v3/runtime/macros","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/v3/runtime/macros/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}