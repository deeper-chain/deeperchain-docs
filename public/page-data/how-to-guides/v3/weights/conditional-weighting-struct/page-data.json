{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/weights/conditional-weighting-struct/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/weights/conditional-weighting-struct","title":"Conditional weighting struct","hideNav":null,"difficulty":2,"section":"how to guides","category":"weights"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Conditional weighting struct\",\n  \"slug\": \"/how-to-guides/v3/weights/conditional-weighting-struct\",\n  \"keywords\": \"weights, benchmarking, runtime\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"weights\",\n  \"difficulty\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Create and use a custom weighting struct in your pallet.'\n    }, {\n      title: 'Use Cases',\n      description: \"Applying totally different weight functions based on certain condition on computing\\n        extrinsic's weight value.\"\n    }, {\n      title: 'Overview',\n      description: \"Substrate provides a mechanism known as [transaction weighting](/v3/concepts/weight) to quantify the\\n      resources consumed while executing a transaction. Typically we will just use the weight\\n      functions returned from our benchmarking for this. But Substrate also allow us to apply a\\n      totally different weight function based on certain condition. We will walk through an example\\n      in this guide. Once defined, it can be used directly in your pallet, written as such:\\n      `#[pallet::weight(Conditional(<your condition>)]`.\\n      \\nHere are the different traits we'll be implementing:\\n  - [`WeighData`](/rustdocs/latest/frame_support/weights/trait.WeighData.html#impl-WeighData<T>-for-(Weight%2C%20DispatchClass%2C%20Pays)): Weigh the data in a function. \\n    `pallet::weight` expects whatever implements `WeighData<T>` to replace `T` with a tuple of the dispatch arguments.\\n  - [`PaysFee`](rustdocs/latest/frame_support/weights/trait.PaysFee.html): Designate whether the dispatch pays a fee or not.\\n  - [`ClassifyDispatch`](/rustdocs//latest/frame_support/weights/trait.ClassifyDispatch.html): A way to tell the runtime about the type of dispatch being made.\"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-write-the-weighdata-struct\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-write-the-weighdata-struct\",\n    \"aria-label\": \"1 write the weighdata struct permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Write the \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"WeighData\"), \" struct\"), mdx(\"p\", null, \"Import \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DispatchClass\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WeighData\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PaysFee\"), \" by declaring \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"use frame_support::dispatch::{DispatchClass, PaysFee, WeighData}\"), \"\\nat the top of your pallet.\"), mdx(\"p\", null, \"In your pallet's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"lib.rs\"), \" file, declare a struct called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Conditional\"), \" and write an implementation\\nof \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WeighData\"), \" for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Conditional\"), \", where the first parameter is the condition that evaluate to\\na boolean value. In the following example, if the condition is true, the weight will be linear to\\nthe input. Otherwise the weight will be a constant.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallets/example/src/lib.rs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"use frame_support::dispatch::{DispatchClass, PaysFee, WeighData};\\n\\n// -- snip --\\n\\npub struct Conditional(u32);\\n\\nimpl WeighData<(&bool, &u32)> for Conditional {\\n    fn weigh_data(&self, (switch, val): (&bool, &u32)) -> Weight {\\n\\n        // If the first parameter is true, then the weight is linear in the second parameter.\\n        if *switch {\\n            val.saturating_mul(self.0)\\n        }\\n        // Otherwise the weight is constant.\\n        else {\\n            self.0\\n        }\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-classify-dispatch-calls\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-classify-dispatch-calls\",\n    \"aria-label\": \"2 classify dispatch calls permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Classify dispatch calls\"), mdx(\"p\", null, \"Add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"weights::{ClassifyDispatch, DispatchClass, Pays, Weight}\"), \" to your pallet's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"frame_support\"), \" imports.\\nSince this implementation of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WeighData\"), \" requires a \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/weights/enum.DispatchClass.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"DispatchClass\")), \", use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"default\"), \"\\nto classify all calls as normal:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallets/example/src/lib.rs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"use frame_support::weights::{ClassifyDispatch, DispatchClass, Pays, Weight};\\n\\n// -- snip --\\n\\n// Implement ClassifyDispatch\\nimpl<T> ClassifyDispatch<T> for Conditional {\\n    fn classify_dispatch(&self, _: T) -> DispatchClass {\\n        Default::default()\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"3-implement-paysfee\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-implement-paysfee\",\n    \"aria-label\": \"3 implement paysfee permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Implement \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"PaysFee\")), mdx(\"p\", null, \"Specify how \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PaysFee\"), \" is used for the custom \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WeighData\"), \" struct. Setting this to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"true\"), \" will require the\\ncaller of this dispatch to pay a fee: \"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallets/example/src/lib.rs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"use frame_support::weights::PaysFee\\n\\n// -- snip --\\n\\n// Implement PaysFee\\nimpl PaysFee for Conditional {\\n    fn pays_fee(&self) -> bool {\\n        true\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"4-use-the-weighting-struct-for-an-extrinsic\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-use-the-weighting-struct-for-an-extrinsic\",\n    \"aria-label\": \"4 use the weighting struct for an extrinsic permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Use the weighting struct for an extrinsic\"), mdx(\"p\", null, \"Use the conditional weighting struct on your pallet's extrinsics like this:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallets/example/src/lib.rs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"  #[pallet::weight(Conditional(200))]\\n  fn example(origin: OriginFor<T>, add_flag: bool, val: u32>) -> DispatchResult {\\n      //...\\n  }\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/435f56edc14a3a7e895ff5370f6e5179dc547cc4/frame/example/src/lib.rs#L324-L349\"\n  }, \"Custom weighting struct in the Example pallet\"))), mdx(\"h2\", {\n    \"id\": \"related-material\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-material\",\n    \"aria-label\": \"related material permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related material\"), mdx(\"h4\", null, \"Docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/runtime/benchmarking\"\n  }, \"Benchmarking\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-to-guides/v3/weights/calculate-fees\"\n  }, \"Calculate custom fees\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-write-the-weighdata-struct","title":"1. Write the WeighData struct"},{"url":"#2-classify-dispatch-calls","title":"2. Classify dispatch calls"},{"url":"#3-implement-paysfee","title":"3. Implement PaysFee"},{"url":"#4-use-the-weighting-struct-for-an-extrinsic","title":"4. Use the weighting struct for an extrinsic"}]},{"url":"#examples","title":"Examples"},{"url":"#related-material","title":"Related material"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/03-weights/d-conditional-weighting-struct/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/weights/conditional-weighting-struct","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/weights/conditional-weighting-struct/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}