{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/weights/calculate-fees/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/weights/calculate-fees","title":"Calculating Fees","hideNav":null,"difficulty":1,"section":"how to guides","category":"weights"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Calculating Fees\",\n  \"slug\": \"/how-to-guides/v3/weights/calculate-fees\",\n  \"keywords\": \"weights, fees, runtime, FRAME v1\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"weights\",\n  \"difficulty\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Customize \\`WeightToFee\\` to modify how fees are calculated for your runtime.'\n    }, {\n      title: 'Use Cases',\n      description: \"Modify the way fees are calculated, instead of using [`IdentityFee`](/rustdocs/latest/frame_support/weights/struct.IdentityFee.html) which maps one unit of fee to one unit of weight.\"\n    }, {\n      title: 'Overview',\n      description: \"This guides steps through the process of customizing `WeightToFee` for your runtime's implementation of `pallet_transaction_payment`.\\n\\t\\tFees are broken down into three components:\\n- **Byte fee** - A fee proportional to the transaction's length in bytes. The proportionality \\nconstant is a parameter in the Transaction Payment Pallet.\\n- **Weight fee** - A fee calculated from the [transaction's weight](/v3/runtime/weights-and-fees). The conversion doesn't \\nneed to be linear, although it often is. The same conversion function is applied across all \\ntransactions for all pallets in the runtime.\\n- **Fee Multiplier** - A multiplier for the computed fee, that can change as the chain progresses.\\nFRAME provides the [Transaction Payment Pallet](/rustdocs/latest/pallet_transaction_payment/index.html)\\nfor calculating and collecting fees for executing transactions. It can be useful to modify \\nthe way fees are calculated to more accurately charge fees.\"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-write-the-linearweighttofee-struct\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-write-the-linearweighttofee-struct\",\n    \"aria-label\": \"1 write the linearweighttofee struct permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Write the \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"LinearWeightToFee\"), \" struct\"), mdx(\"p\", null, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\"), \", create the struct called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LinearWeightToFee\"), \" that implements\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/weights/trait.WeightToFeePolynomial.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"WeightToFeePolynomial\")), \".\\nIt must returns a smallvec of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WeightToFeeCoefficient\"), \" integers.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub struct LinearWeightToFee<C>(sp_std::marker::PhantomData<C>);\\n\\nimpl<C> WeightToFeePolynomial for LinearWeightToFee<C>\\nwhere\\n    C: Get<Balance>,\\n{\\n    type Balance = Balance;\\n\\n    fn polynomial() -> WeightToFeeCoefficients<Self::Balance> {\\n        let coefficient = WeightToFeeCoefficient {\\n            coeff_integer: C::get(),\\n            coeff_frac: Perbill::zero(),\\n            negative: false,\\n            degree: 1,\\n        };\\n\\n        smallvec!(coefficient)\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-configure-pallet_transaction_payment-in-your-runtime\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-configure-pallet_transaction_payment-in-your-runtime\",\n    \"aria-label\": \"2 configure pallet_transaction_payment in your runtime permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Configure \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"pallet_transaction_payment\"), \" in your runtime\"), mdx(\"p\", null, \"Convert the dispatch weight\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type WeightToFee\"), \" to the chargeable fee \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LinearWeightToFee\"), \" (replacing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"IdentityFee<Balance>;\"), \"):\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"parameter_types! {\\n    // Used with LinearWeightToFee conversion.\\n    pub const FeeWeightRatio: u128 = 1_000;\\n    // Establish the byte-fee. It is used in all configurations.\\n    pub const TransactionByteFee: u128 = 1;\\n}\\n\\nimpl pallet_transaction_payment::Config for Runtime {\\n    type OnChargeTransaction = CurrencyAdapter<Balances, ()>;\\n    type TransactionByteFee = TransactionByteFee;\\n\\n    // Convert dispatch weight to a chargeable fee.\\n    type WeightToFee = LinearWeightToFee<FeeWeightRatio>;\\n\\n    type FeeMultiplierUpdate = ();\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/tree/master/frame/transaction-payment\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"transaction-payment-pallet\")))), mdx(\"h2\", {\n    \"id\": \"related-material\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-material\",\n    \"aria-label\": \"related material permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related material\"), mdx(\"h4\", null, \"How-to guides\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-to-guides/v3/weights/add-benchmarking\"\n  }, \"Add benchmarking to your runtime\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-to-guides/v3/weights/use-benchmark-weights\"\n  }, \"Use benchmarked weights in your pallet\"))), mdx(\"h4\", null, \"Docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/concepts/weight\"\n  }, \"Weights in Substrate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/runtime/weights-and-fees\"\n  }, \"Transaction Weights and Fees\"))), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/weights/type.WeightToFeeCoefficients.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"WeightToFeeCoefficients\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/weights/type.WeightToFeeCoefficient.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"WeightToFeeCoefficient\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/weights/trait.WeightToFeePolynomial.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"WeightToFeePolynomial\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-write-the-linearweighttofee-struct","title":"1. Write the LinearWeightToFee struct"},{"url":"#2-configure-pallet_transaction_payment-in-your-runtime","title":"2. Configure pallet_transaction_payment in your runtime"}]},{"url":"#examples","title":"Examples"},{"url":"#related-material","title":"Related material"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/03-weights/a-calculate-fees/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/weights/calculate-fees","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/weights/calculate-fees/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}