{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/parachains/runtime-upgrades/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/parachains/runtime-upgrades","title":"Runtime Upgrades","hideNav":null,"difficulty":3,"section":"how to guides","category":"parachains"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Runtime Upgrades\",\n  \"slug\": \"/how-to-guides/v3/parachains/runtime-upgrades\",\n  \"version\": \"polkadot-0.9.10\",\n  \"section\": \"how to guides\",\n  \"category\": \"parachains\",\n  \"difficulty\": 3,\n  \"keywords\": [\"collators\", \"parachains\", \"upgrade\", \"cumulus\", \"storage\", \"migration\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar Message = makeShortcode(\"Message\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Ensure that parachain runtime upgrades succeed.'\n    }, {\n      title: 'Use Cases',\n      description: \"\\n  - Modifying parachain runtimes (add/remove pallets)\\n  - Parachain storage migrations\\n      \"\n    }, {\n      title: 'Overview',\n      description: \"\\n  Runtime upgrades on a parachain have _much_ stricter requirements and a slightly different\\n  flow required as they you _must_ coordinate with the relay chain to facilitate this. Because\\n  of this, and the very confined nature of state transition coordination both\\n  **quickly and succinctly** enough for the block inclusion in the relay chain.\\n      \"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"before-you-continue\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#before-you-continue\",\n    \"aria-label\": \"before you continue permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Before you continue\"), mdx(\"p\", null, \"Please do the folowing:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Read the general \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/runtime/upgrades\"\n  }, \"runtime upgrade docs\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Complete the \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tutorials/v3/cumulus/start-relay\"\n  }, \"cumulus tutorial\"), \", and learn the\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"polkadot-launch\"), \" tool for testing.\")), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-choose-your-upgrade-approach\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-choose-your-upgrade-approach\",\n    \"aria-label\": \"1 choose your upgrade approach permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Choose your upgrade approach\"), mdx(\"p\", null, \"If your existing Substrate chain has a very large state which you are migrating\\nbetween different storage formats, it might not be possible to run all of the\\nruntime migrations within one block. There are a handful of strategies you can\\nuse to remedy this problem:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If the amount of storage items to be migrated can feasibly be processed\\nwithin two or three blocks you can run the migrations using the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/paritytech/substrate/tree/master/frame/scheduler\"\n  }, \"Scheduler pallet\"), \"\\nto ensure they get executed regardless of block producer.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use versioned storage and only execute migrations when storage values that\\nhaven't yet been upgraded are accessed. This can cause variance in\\ntransaction fees between users and could potentially result in more complex\\nruntime code. However, if properly metered (weights are properly benchmarked)\\nthis approach will ensure minimal downtime for migration.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"If you must split your migrations among multiple blocks you can do it either\\non-chain or off-chain:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"An on-chain multi-block migration will require custom pallet logic to be\\nwritten which can either queue changes over time or use the Scheduler\\npallet to migrate chunks of storage at a time.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Instead of adding migration code to your runtime you can generate the\\nmigration manually off-chain and use multiple \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"system.setStorage\"), \" calls to\\nadd and remove storage items as necessary via an origin with root\\npermission (for example democracy). If you are limited in the number of\\ntransactions you can make, you can batch multiple transactions to occur\\nover time via the scheduler.\"))))), mdx(Message, {\n    type: \"red\",\n    title: \"You need to test!\",\n    text: \"\\nAfter your migration strategy is established, you absolutely should test this migration on a\\nnon-production testnet to _ensure_ it will work _before_ you continue!\\nSee the [how-to guide on storage migration testing](/how-to-guides/v3/storage-migrations/tests) to\\nproceed.\\n\\n\\nAlso keep in mind that testing in a confined small dummy network will tests your failure modes in a\\nreal network with latency and many collators and validators. The closer you can get to testing this\\nin the same environment, the more sure you can be that your runtime upgrades will not fail.\\n\",\n    mdxType: \"Message\"\n  }), mdx(\"h3\", {\n    \"id\": \"2-authorize---enact-an-upgrade-flow\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-authorize---enact-an-upgrade-flow\",\n    \"aria-label\": \"2 authorize   enact an upgrade flow permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Authorize -> enact an upgrade flow\"), mdx(\"p\", null, \"When finally ready to upgrade a parachain, the relay chain needs to be informed about the runtime\\nupgrade of your chain before it happens.\\n\", \"[Cumulus][https://github.com/paritytech/cumulus#cumulus-cloud]\", \" provides functionality to help you\\nnotify the relay chain about the upcoming upgrade by:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Using\\n\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://paritytech.github.io/cumulus/cumulus_pallet_parachain_system/pallet/struct.Pallet.html#method.authorize_upgrade\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"authorize_upgrade\"))), \"\\nto provide the hash of your upgrade and authorize it.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Using\\n\", mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"https://paritytech.github.io/cumulus/cumulus_pallet_parachain_system/pallet/struct.Pallet.html#method.enact_authorized_upgrade\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"enact_authorized_upgrade\"))), \"\\nto provide the actual code for the upgrade.\")), mdx(\"p\", null, \"With both these functions called, the relay chain will be notified that the new\\nupgrade has been scheduled.\"), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/apopiak/substrate-migrations\"\n  }, \"Substrate migrations example repo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/6be513d663836c5c5b8a436f5712402a1c5365a3/frame/staking/src/lib.rs#L757\"\n  }, \"Staking pallet migration logic\"))), mdx(\"h2\", {\n    \"id\": \"resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#resources\",\n    \"aria-label\": \"resources permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/runtime/upgrades\"\n  }, \"Regular runtime upgrade docs\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/maxsam4/fork-off-substrate\"\n  }, \"Fork Off Substrate tool\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/v3/tools/try-runtime\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"try-runtime\"), \" tool\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.crowdcast.io/e/substrate-seminar/41\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"try-runtime\"), \" video workshop\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-to-guides/v3/storage-migrations/basics\"\n  }, \"Storage migrations Guide\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/how-to-guides/v3/storage-migrations/tests\"\n  }, \"Storage migration testing Guide\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://drive.google.com/file/d/19HPFUmSQIxVkxaVSg1SWveSdvjHUw1b8/view?usp=sharing\"\n  }, \"Substrate Builders Program Storage Migration Discussion\"))))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#before-you-continue","title":"Before you continue"},{"url":"#steps","title":"Steps","items":[{"url":"#1-choose-your-upgrade-approach","title":"1. Choose your upgrade approach"},{"url":"#2-authorize---enact-an-upgrade-flow","title":"2. Authorize -> enact an upgrade flow"}]},{"url":"#examples","title":"Examples"},{"url":"#resources","title":"Resources"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/07-parachains/d-runtime-upgrades/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/parachains/runtime-upgrades","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/parachains/runtime-upgrades/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}