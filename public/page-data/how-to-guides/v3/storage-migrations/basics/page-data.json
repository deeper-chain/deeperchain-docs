{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/storage-migrations/basics/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/storage-migrations/basics","title":"Basic Storage Migration","hideNav":null,"difficulty":1,"section":"how to guides","category":"storage migrations"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Basic Storage Migration\",\n  \"slug\": \"/how-to-guides/v3/storage-migrations/basics\",\n  \"keywords\": \"storage migration, runtime, upgrades\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"storage migrations\",\n  \"difficulty\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar Message = makeShortcode(\"Message\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Write a storage migration for a pallet that adds an additional \\`Vec<u8>\\` storage item to runtime storage.'\n    }, {\n      title: 'Use Cases',\n      description: \"A pallet that adds a single storage item and needs to be included in a runtime upgrade.\"\n    }, {\n      title: 'Overview',\n      description: \"This guide will step through a storage migration on [FRAME's Nick's pallet](https://github.com/paritytech/substrate/tree/master/frame/nicks). \\n        It shows how to modify a storage map to provide an optional field that includes a last name, and how to write the migration function ready \\n        to be triggered upon a runtime upgrade. This guide can equally be used in other contexts which require a simple storage migration that \\n        modifies a storage map in a runtime.\\n        \"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-create-a-storage-struct-and-utility-type\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-create-a-storage-struct-and-utility-type\",\n    \"aria-label\": \"1 create a storage struct and utility type permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Create a storage struct and utility type\"), mdx(\"p\", null, \"Write a struct to manage the previous and new storage items, first and last:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub struct Nickname {\\n    first: Vec<u8>,\\n    last: Option<Vec<u8>>, // handles empty storage\\n}\\n\")), mdx(\"p\", null, \"Write a utility type enum to keep track of the storage versions:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[derive(codec::Encode, codec::Decode, Clone, frame_support::RuntimeDebug, PartialEq)]\\npub enum StorageVersion {\\n    V1Bytes,\\n    V2Struct,\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-update-your-storage-items\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-update-your-storage-items\",\n    \"aria-label\": \"2 update your storage items permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Update your storage items\"), mdx(\"p\", null, \"The Nicks pallet only keeps track of a lookup table in storage, but we also need to add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PalletVersion\"), \" to\\ndeclare the current version in storage. To update these items, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Nickname\"), \" struct in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NameOf\"), \" item and add the new storage item \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PalletVersion\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"decl_storage! {\\n    trait Store for Module<T: Trait> as MyNicks {\\n        /// The lookup table for names.\\n        NameOf: map hasher(twox_64_concat) T::AccountId => Option<(Nickname, BalanceOf<T>)>;\\n        /// The current version of the pallet.\\n        PalletVersion: StorageVersion = StorageVersion::V1Bytes;\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"3-update-all-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-update-all-functions\",\n    \"aria-label\": \"3 update all functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Update all functions\"), mdx(\"p\", null, \"All of the Nicks pallet functions need to account for the new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"last: Option<Vec<u8>>\"), \" storage item. Update each function by adding it as a parameter, for example:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"//--snip\\nfn force_name(origin,\\n    target: <T::Lookup as StaticLookup>::Source,\\n    first: Vec<u8>,\\n    last: Option<Vec<u8>>) {\\n//--snip\\n    }\\n\")), mdx(\"p\", null, \"In addition, update all storage writes with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Nickname\"), \" struct:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"<NameOf<T>>::insert(&sender, (Nickname { first, last }, deposit));\\n\")), mdx(\"h3\", {\n    \"id\": \"4-declare-a-migration-module\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-declare-a-migration-module\",\n    \"aria-label\": \"4 declare a migration module permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Declare a migration module\"), mdx(\"p\", null, \"The migration module should contain two parts:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"A module indicating the deprecated storage to migrate from.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"The migration function which returns a weight.\")), mdx(\"p\", null, \"The scaffolding of this module looks like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub mod migration {\\n    use super::*;\\n\\n    pub mod v1 {...} // only contains V1 storage format\\n\\n    pub fn migrate_to_v2<T: Config>() -> frame_support::weights::Weight {...} // contains checks and transforms storage to V2 format\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"5-write-migrate_to_v2\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#5-write-migrate_to_v2\",\n    \"aria-label\": \"5 write migrate_to_v2 permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"5. Write \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"migrate_to_v2\")), mdx(\"p\", null, \"Here's an overview of what this function needs to do:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Check the storage version to make sure a migration is needed (good practice)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Transform the storage values into the new storage format\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Update the storage version\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Return the weight consumed by the migration\")), mdx(\"h4\", null, \"Check the storage version\"), mdx(\"p\", null, \"Construct the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrate_to_v2\"), \" logic around the check. If the storage migration doesn't need to happen, return 0:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"if PalletVersion::get() == StorageVersion::V1Bytes {\\n\\n    // migrate to v2\\n\\n} else {\\n    frame_support::debug::info!(\\\" >>> Unused migration!\\\");\\n    0\\n}\\n\")), mdx(\"h4\", null, \"Transform storage values\"), mdx(\"p\", null, \"Using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/types/struct.StorageMap.html#method.translate\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"translate storage method\")), \",\\ntransform the storage values to the new format. Since the existing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nick\"), \" value in storage can be made of a string separated by a\\nspace, split it at the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"' '\"), \" and place anything after that into the new \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"last\"), \" storage item. If it isn't, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"last\"), \" takes the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"None\"), \" value:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"NameOf::<T>::translate::<(Vec<u8>, BalanceOf<T>), _>(\\n  |k: T::AccountId, (nick, deposit): (Vec<u8>, BalanceOf<T>)| {\\n    // We split the nick at ' ' (<space>).\\n    match nick.iter().rposition(|&x| x == b\\\" \\\"[0]) {\\n        Some(ndx) => Some((Nickname {\\n          first: nick[0..ndx].to_vec(),\\n                  last: Some(nick[ndx + 1..].to_vec())\\n          }, deposit)),\\n          None => Some((Nickname { first: nick, last: None }, deposit))\\n      }\\n        }\\n    );\\n\")), mdx(\"br\", null), mdx(Message, {\n    type: \"green\",\n    title: \"Tip\",\n    text: \"Remove 'Option' wrapping to make sure \\n  decoding works properly.\",\n    mdxType: \"Message\"\n  }), mdx(\"h4\", null, \"Return the consumed weight\"), mdx(\"p\", null, \"To do this, count the number of storage reads and writes and return the corresponding weight:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"let count = NameOf::<T>::iter().count();\\nT::DbWeight::get().reads_writes(count as Weight + 1, count as Weight + 1)\\n\")), mdx(\"h4\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"migrate_to_v2\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"on_runtime_upgrade\")), mdx(\"p\", null, \"Go back to the pallet's functions and specify the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"migrate_to_v2\"), \" function in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"on_runtime_upgrade\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"fn on_runtime_upgrade() -> frame_support::weights::Weight {\\n  migration::migrate_to_v2::<T>()\\n  }\\n\")), mdx(\"h3\", {\n    \"id\": \"6-create-a-typesjson-file\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#6-create-a-typesjson-file\",\n    \"aria-label\": \"6 create a typesjson file permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"6. Create a \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"types.json\"), \" file\"), mdx(\"p\", null, \"Put the new storage types in a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"types.json\"), \" which you will need to trigger the migration using a UI. Our new types in JSON are:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"{\\n  \\\"Nickname\\\": {\\n    \\\"first\\\": \\\"Vec<u8>\\\",\\n    \\\"last\\\": \\\"Option<Vec<u8>>\\\"\\n  },\\n  \\\"StorageVersion\\\": {\\n    \\\"_enum\\\": [\\n      \\\"V1Bytes\\\",\\n      \\\"V2Struct\\\"\\n    ]\\n  }\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/substrate-developer-hub/migration-example/pull/2/files\"\n  }, \"Migrating the Nicks pallet\"))), mdx(\"h2\", {\n    \"id\": \"resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#resources\",\n    \"aria-label\": \"resources permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Resources\"), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/std/option/\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Option\"), \" in Rust\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/migration/index.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"frame_support::storage::migration\")), \" utility docs\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-create-a-storage-struct-and-utility-type","title":"1. Create a storage struct and utility type"},{"url":"#2-update-your-storage-items","title":"2. Update your storage items"},{"url":"#3-update-all-functions","title":"3. Update all functions"},{"url":"#4-declare-a-migration-module","title":"4. Declare a migration module"},{"url":"#5-write-migrate_to_v2","title":"5. Write migrate_to_v2"},{"url":"#6-create-a-typesjson-file","title":"6. Create a types.json file"}]},{"url":"#examples","title":"Examples"},{"url":"#resources","title":"Resources"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/05-storage-migrations/a-nicks-migration/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/storage-migrations/basics","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/storage-migrations/basics/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}