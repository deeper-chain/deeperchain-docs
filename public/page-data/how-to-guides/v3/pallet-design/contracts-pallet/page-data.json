{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/pallet-design/contracts-pallet/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/pallet-design/contracts-pallet","title":"Integrate the Contracts Pallet","hideNav":null,"difficulty":1,"section":"how to guides","category":"pallet design"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Integrate the Contracts Pallet\",\n  \"slug\": \"/how-to-guides/v3/pallet-design/contracts-pallet\",\n  \"keywords\": \"pallet design, intermediate, runtime\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"pallet design\",\n  \"difficulty\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Message = makeShortcode(\"Message\");\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Message, {\n    type: \"green\",\n    title: \"Tip\",\n    text: \"You should already have the latest version of the  Substrate Node Template compiled on your computer to follow this guide. If you haven't already done so, refer to  [this tutorial](/tutorials/v3/create-your-first-substrate-chain/). \",\n    mdxType: \"Message\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Add the Contracts pallet to your runtime to be able to use Wasm smart contracts in your blockchain.'\n    }, {\n      title: 'Use Cases',\n      description: \"- Developing a chain capable of handling smart contracts\\n- On-chain execution of Wasm binaries\"\n    }, {\n      title: 'Overview',\n      description: \"This guide will show you how you can add the [Contracts pallet](/rustdocs/latest/pallet_contracts/index.html) to your runtime in order to allow your blockchain\\n        to support Wasm smart contracts. You can follow similar patterns to add additional FRAME pallets to your runtime,\\n        however you should note that each pallet is a little different in terms of the specific configuration settings\\n        needed to use it correctly.\\n        \"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-import-the-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-import-the-dependencies\",\n    \"aria-label\": \"1 import the dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Import the dependencies\"), mdx(\"p\", null, \"Refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/how-to-guides/v3/basics/pallet-integration\"\n  }, \"this guide\"), \" to properly include Contracts in your runtime.\"), mdx(\"p\", null, \"This includes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"updating \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"runtime/Cargo.toml\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"runtime/Cargo.toml\")), \" with:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet-contracts\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet-contracts-primitives\"))), mdx(\"h3\", {\n    \"id\": \"2-add-the-contracts-pallet-to-your-runtime\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-add-the-contracts-pallet-to-your-runtime\",\n    \"aria-label\": \"2 add the contracts pallet to your runtime permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Add the Contracts pallet to your runtime\"), mdx(\"p\", null, \"Now you'll have to implement the Contract's pallet \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/pallet_contracts/trait.Config.html\"\n  }, \"configuration traits\"), \" in order for your runtime to use it properly.\"), mdx(\"h4\", null, \"Implement \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"pallet_contracts\")), mdx(\"p\", null, \"Start by making sure you've included all of the types that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallet_contracts\"), \" exposes. You can copy these from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/master/frame/contracts/src/lib.rs#L144\"\n  }, \"FRAME's source code\"), \"\\n(always check that versioning is equivalent to the imported crate). Here's what you need to add inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\"), \" \", \"\\u2014\", \" only the first 4 types are shown:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl pallet_contracts::Config for Runtime {\\n    type Time = Timestamp;\\n    type Randomness = RandomnessCollectiveFlip;\\n    type Currency = Balances;\\n    type Event = Event;\\n    /* --snip-- */\\n\")), mdx(\"h4\", null, \"Parameter types\"), mdx(\"p\", null, \"Notice how some of these types require \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"parameter_types\"), \". Have a look at their implementation in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/632b32300eb9376767c2ae7b38e79b3f7f5329b1/bin/node/runtime/src/lib.rs#L887-L903\"\n  }, \"this\"), \"\\nruntime to make sure you've included them correctly. They go right above \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"impl pallet_contracts::Config for Runtime\"), \".\\nWe'll take \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DeletionQueueDepth\"), \" as one example \", \"\\u2014\", \" go ahead and add them in:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"parameter_types! {\\n     /* --snip-- */\\n    pub DeletionQueueDepth: u32 = ((DeletionWeightLimit::get() / (\\n            <Runtime as pallet_contracts::Config>::WeightInfo::on_initialize_per_queue_item(1) -\\n            <Runtime as pallet_contracts::Config>::WeightInfo::on_initialize_per_queue_item(0)\\n            )) / 5) as u32;\\n        /* --snip-- */\\n    }\\n\")), mdx(\"p\", null, \"Notice how the above parameter type depends on \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WeightInfo\"), \". This requires you to add the following to the top of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"use pallet_contracts::weights::WeightInfo;\\n\")), mdx(\"p\", null, \"Similarly, other parameter types use constants such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DAYS\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MILLICENTS\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AVERAGE_ON_INITIALIZE_RATIO\"), \".\"), mdx(\"p\", null, \"Define these towards the top of your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\"), \" file where the other constants exist:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"// Contracts price units.\\npub const MILLICENTS: Balance = 1_000_000_000;\\npub const CENTS: Balance = 1_000 * MILLICENTS;\\npub const DOLLARS: Balance = 100 * CENTS;\\n\\nconst fn deposit(items: u32, bytes: u32) -> Balance {\\n    items as Balance * 15 * CENTS + (bytes as Balance) * 6 * CENTS\\n}\\n\\n/// We assume that ~10% of the block weight is consumed by `on_initalize` handlers.\\n/// This is used to limit the maximal weight of a single extrinsic.\\nconst AVERAGE_ON_INITIALIZE_RATIO: Perbill = Perbill::from_percent(10);\\n\")), mdx(\"h4\", null, \"Add an instance in runtime for \", mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"pallet_contracts\")), mdx(\"p\", null, \"Create an instance of the Contracts pallet in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_macro!\"), \" inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"/* --snip-- */\\n Contracts: pallet_contracts::{Pallet, Call, Config<T>, Storage, Event<T>},\\n /* --snip-- */\\n\")), mdx(\"h3\", {\n    \"id\": \"3-add-api-dependencies\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-add-api-dependencies\",\n    \"aria-label\": \"3 add api dependencies permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Add API dependencies\"), mdx(Message, {\n    type: \"yellow\",\n    title: \"Information\",\n    text: \"The Contracts pallet exposes custom runtime APIs and RPC endpoints\\n  which enables reading a contracts state from off chain. Since we want to use \\n  the Contracts pallet to make calls to our node's storage without making a transaction, \\n  we'll two other pallets: the Contracts RPC Runtime API pallet and the Contracts RPC pallet \\n  to help us achieve this.\",\n    mdxType: \"Message\"\n  }), mdx(\"h4\", null, \"Import dependencies\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Just like in the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#1-import-the-dependencies\"\n  }, \"first step of this guide\"), \", update \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/runtime/Cargo.toml\"), \" to add \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallet-contracts-rpc-runtime-api\"), \".\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Similarly, we need to include \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallet-contracts\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallet-contracts-rpc\"), \" inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node/Cargo.toml\"), \" so that our runtime can interact with our node.\"))), mdx(\"p\", null, \"Now we can add the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/pallet_contracts_rpc_runtime_api/trait.ContractsApi.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ContractsApi\")), \" dependency required to implement the Contracts runtime API.\"), mdx(\"p\", null, \"Add this alongside the other \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"use\"), \" statements in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node/src/rpc.rs\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"use pallet_contracts_rpc::{Contracts, ContractsApi};\\n\")), mdx(\"br\", null), mdx(Message, {\n    type: \"green\",\n    title: \"Tip\",\n    text: \"\\nUnsure what version to import? Use the latest version as indicated in\\n[crates.io](https://crates.io/search?q=pallet-contracts-rpc).\\n\",\n    mdxType: \"Message\"\n  }), mdx(\"h4\", null, \"Implement the Contracts runtime API\"), mdx(\"p\", null, \"We're now ready to implement the Contracts\\nruntime API.\"), mdx(\"p\", null, \"This happens in the\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"impl_runtime_apis! \"), \"macro near the end of your\\nruntime.\"), mdx(\"p\", null, \"Make sure to add the following functions that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ContractsApi\"), \" exposes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"call()\")), \": returns \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet_contracts_primitives::ContractExecResult { Contracts::bare_call(origin, dest, value, gas_limit, input_data)}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"get_storage()\")), \": returns \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet_contracts_primitives::GetStorageResult {Contracts::get_storage(address, key)}\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"rent_projection()\")), \": returns \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pallet_contracts_primitives::RentProjectionResult<BlockNumber> {Contracts::rent_projection(address)}\"))), mdx(\"h4\", null, \"Add RPC API extension\"), mdx(\"p\", null, \"To be able to call the runtime API, we must add the RPC to the node's service.\"), mdx(\"p\", null, \"This RPC does not contain access to the Contracts pallet by default. To interact with it, we have to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"extend the existing RPC and add the Contracts pallet\"), \" along with its API.\"), mdx(\"p\", null, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"node/src/rpc.rs\"), \", add this line to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"where\"), \" clause in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create_full<C, P>\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \" C::Api: pallet_contracts_rpc::ContractsRuntimeApi<Block, AccountId, Balance, BlockNumber>,\\n\")), mdx(\"p\", null, \"And add the contracts RPC API extension using:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \" // Contracts RPC API extension\\n   io.extend_with(\\n       ContractsApi::to_delegate(Contracts::new(client.clone()))\\n   );\\n\")), mdx(\"h3\", {\n    \"id\": \"4-start-your-upgraded-chain\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-start-your-upgraded-chain\",\n    \"aria-label\": \"4 start your upgraded chain permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Start your upgraded chain\"), mdx(\"p\", null, \"Your node template now includes the Contracts pallet and is ready to execute WASM smart contracts.\"), mdx(\"p\", null, \"Build and run it using:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"# Build chain\\ncargo build --release\\n# Launch chain in development mode\\n./target/release/node-template --dev --tmp\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"canvas-node\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/canvas-node/blob/master/runtime/src/lib.rs#L361\"\n  }, \"runtime\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"canvas-node\"), \" \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/canvas-node/blob/master/node/src/rpc.rs\"\n  }, \"rpc file\"))), mdx(\"h2\", {\n    \"id\": \"related-material\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-material\",\n    \"aria-label\": \"related material permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related material\"), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/pallet_contracts/index.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pallet_contracts\"), \" crate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/pallet_contracts_rpc/index.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pallet_contracts_rpc\"), \" crate\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-import-the-dependencies","title":"1. Import the dependencies"},{"url":"#2-add-the-contracts-pallet-to-your-runtime","title":"2. Add the Contracts pallet to your runtime"},{"url":"#3-add-api-dependencies","title":"3. Add API dependencies"},{"url":"#4-start-your-upgraded-chain","title":"4. Start your upgraded chain"}]},{"url":"#examples","title":"Examples"},{"url":"#related-material","title":"Related material"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/02-pallet-design/a-add-contracts-pallet/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/pallet-design/contracts-pallet","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/pallet-design/contracts-pallet/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}