{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/pallet-design/randomness/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/pallet-design/randomness","title":"Generating On-chain Randomness","hideNav":null,"difficulty":2,"section":"how to guides","category":"pallet design"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Generating On-chain Randomness\",\n  \"slug\": \"/how-to-guides/v3/pallet-design/randomness\",\n  \"keywords\": \"pallet design, intermediate, runtime, randomness\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"pallet design\",\n  \"difficulty\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar Message = makeShortcode(\"Message\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Implement a randomness function inside a pallet.'\n    }, {\n      title: 'Use Cases',\n      description: \"- NFT applications\\n- Casino gaming type applications\"\n    }, {\n      title: 'Overview',\n      description: \"[Randomness](/v3/runtime/randomness)is useful in computer programs for everything from gaming applications to selecting block\\n        authors. True randomness is hard to come by in deterministic computers. This is particularly true in the context\\n        of a blockchain when all the nodes in the network must agree on the state of the chain. FRAME provides runtime engineers\\n        with a source of randomness, using the [Randomness trait](/rustdocs/latest/frame_support/traits/trait.Randomness.html).\\n        This guide would step you through making use of FRAME's Randomness trait by using it's `random` method and a nonce as a subject.\\n        For additional entropy to the randomness value, the last step shows how to assign the `RandomCollectiveFlip` pallet\\n        to the configuration trait of a pallet exposing some \\\"random\\\" type.\\n        \"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-import-randomness\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-import-randomness\",\n    \"aria-label\": \"1 import randomness permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Import \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"Randomness\")), mdx(\"p\", null, \"Inside the pallet you want to use, import the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Randomness\"), \" trait from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"frame_support\"), \",:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"use frame_support::traits::Randomness;\\n\")), mdx(\"p\", null, \"Now, include it in your pallet's configuration trait:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::config]\\npub trait frame_system::Config {\\n    type MyRandomness: Randomness<H256>;\\n}\\n\")), mdx(\"p\", null, \"Notice that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Randomness\"), \" trait specifies a generic return of type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Output\"), \". Use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/sp_core/struct.H256.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"sp_core::H256\")), \" in your pallet\\nto satisfy that trait requirement.\"), mdx(Message, {\n    type: \"red\",\n    title: \"A warning on using this trait\",\n    text: \"As stated in [this trait's documentation](/rustdocs/latest/frame_support/traits/trait.Randomness.html) at best, this trait can give you randomness which was hard to predict a long time ago  but that has become easy to predict recently.  Bear this in mind depending on your use case for it. \",\n    mdxType: \"Message\"\n  }), mdx(\"h3\", {\n    \"id\": \"2-create-a-nonce\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-create-a-nonce\",\n    \"aria-label\": \"2 create a nonce permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Create a nonce\"), mdx(\"p\", null, \"Use a nonce to serve as a subject for the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"frame_support::traits::Randomness::random(subject: &[u8])\"), \" method.\"), mdx(\"p\", null, \"There's two steps to including a nonce in your pallet:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Create a \", mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Nonce\"), \" storage item.\"), \" This could be of type \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"u32\"), \" or \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"u64\"), \" (no need for it to be larger).\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Create a private nonce function.\"), \" This will be used to increment the nonce each time it's used.\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"increment_nonce()\"), \" private function could be implemented in such a way that it returns the nonce as well as\\nupdates it. Using this approach it would look like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"    fn get_and_increment_nonce() -> Vec<u8> {\\n        let nonce = Nonce::get();\\n        Nonce::put(nonce.wrapping_add(1));\\n        nonce.encode()\\n    }\\n\")), mdx(\"br\", null), mdx(Message, {\n    type: \"yellow\",\n    title: \"Information\",\n    text: \"\\nLearn more about [`wrapping_add`](/rustdocs/latest/funty/trait.IsInteger.html#tymethod.wrapping_add)\\nand [`encode()`](/rustdocs/latest/frame_support/dispatch/trait.Encode.html#method.encode) in the\\nRust documentation.\\n\",\n    mdxType: \"Message\"\n  }), mdx(\"h3\", {\n    \"id\": \"3-use-randomness-in-a-dispatchable\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-use-randomness-in-a-dispatchable\",\n    \"aria-label\": \"3 use randomness in a dispatchable permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Use Randomness in a dispatchable\"), mdx(\"p\", null, \"Using the nonce, you can call the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"random()\"), \" method that \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Randomness\"), \" exposes. The code snippet below is a made up example\\nthat assumes relevant events and storage items have been implemented:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"        #[pallet::weight(100)]\\n        pub fn create_unique(\\n            origin: OriginFor<T>)\\n            -> DispatchResultWithPostInfo {\\n\\n                // Account calling this dispatchable.\\n                let sender = ensure_signed(origin)?;\\n\\n                // Random value.\\n                let nonce = Self::get_and_increment_nonce();\\n                let randomValue = T::MyRandomness::random(&nonce);\\n\\n                // Write the random value to storage.\\n                <MyStorageItem<T>>::put(randomValue);\\n\\n                Self::deposit_event(Event::UniqueCreated(randomValue));\\n            }\\n\")), mdx(\"h3\", {\n    \"id\": \"4-updating-your-pallets-runtime-implementation\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-updating-your-pallets-runtime-implementation\",\n    \"aria-label\": \"4 updating your pallets runtime implementation permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Updating your pallet's runtime implementation\"), mdx(\"p\", null, \"Having added a type to your pallet's configuration trait \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Config\"), \" opens up the opportunity to further enhance the\\nrandomness derived by the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Randomness\"), \" trait, by using the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/pallet_randomness_collective_flip/index.html\"\n  }, \"Randomness Collective Flip pallet\"), \".\"), mdx(\"p\", null, \"Using this pallet alongside the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Randomness\"), \" trait will significantly improve the entropy being processed by \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"random()\"), \".\"), mdx(\"p\", null, \"In \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runtime/src/lib.rs\"), \", assuming \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pallet_random_collective_flip\"), \" is instantiated in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"construct_runtime\"), \" as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RandomCollectiveFlip\"), \", specify your exposed\\ntype like this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl my_pallet::Config for Runtime{\\n    type Event;\\n    type MyRandomness = RandomCollectiveFlip;\\n}\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/master/frame/babe/src/randomness.rs\"\n  }, \"Randomness used in BABE\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/master/frame/lottery/src/lib.rs#L471\"\n  }, \"FRAME's Lottery pallet\"))), mdx(\"h2\", {\n    \"id\": \"related-material\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-material\",\n    \"aria-label\": \"related material permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related material\"), mdx(\"h4\", null, \"Other\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://en.wikipedia.org/wiki/Verifiable_random_function\"\n  }, \"Verifiable Random Functions\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-import-randomness","title":"1. Import Randomness"},{"url":"#2-create-a-nonce","title":"2. Create a nonce"},{"url":"#3-use-randomness-in-a-dispatchable","title":"3. Use Randomness in a dispatchable"},{"url":"#4-updating-your-pallets-runtime-implementation","title":"4. Updating your pallet's runtime implementation"}]},{"url":"#examples","title":"Examples"},{"url":"#related-material","title":"Related material"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/02-pallet-design/c-randomness/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/pallet-design/randomness","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/pallet-design/randomness/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}