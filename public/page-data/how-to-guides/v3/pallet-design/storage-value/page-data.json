{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/pallet-design/storage-value/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/pallet-design/storage-value","title":"Use a Struct in Storage","hideNav":null,"difficulty":2,"section":"how to guides","category":"pallet design"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Use a Struct in Storage\",\n  \"slug\": \"/how-to-guides/v3/pallet-design/storage-value\",\n  \"keywords\": \"pallet design, intermediate, runtime\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"pallet design\",\n  \"difficulty\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Use a [\\`StorageValue\\`](/rustdocs/latest/frame_support/storage/trait.StorageValue.html) struct and use it in \\`on_initialize\\`.'\n    }, {\n      title: 'Use Cases',\n      description: \"Keep track of different accounts and balances for testing a pallet.\"\n    }, {\n      title: 'Overview',\n      description: \"Creating a struct of similarly grouped storage items is a neat way to keep track of them.\\n\\t\\tThey can be easier to reference than keeping individual `StorageValue` items separate this way.\\n\\t\\tIn addition, they can be used to ease testing and genesis configuration.\\n\\t\\tThis guide steps through the procedure of creating a struct in storage which:\\n- Keeps track of an initial amount (`issuance`)\\n- Keeps track of the account that receives that amount (`minter`)\\n- Keeps track of an account that can burn some amount (`burner`)\\n- Is (partially) used in `on_initialize`\"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-create-a-your-struct\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-create-a-your-struct\",\n    \"aria-label\": \"1 create a your struct permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Create a your struct\"), mdx(\"p\", null, \"Call it \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MetaData\"), \" and declare its different types:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[derive(Clone, Encode, Decode, Eq, PartialEq, RuntimeDebug, Default)]\\npub struct MetaData<AccountId, Balance> {\\n    issuance: Balance,\\n    minter: AccountId,\\n    burner: AccountId,\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-declare-the-struct-as-a-storage-item\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-declare-the-struct-as-a-storage-item\",\n    \"aria-label\": \"2 declare the struct as a storage item permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Declare the struct as a storage item\"), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StorageValue\"), \" to declare the struct as a new single item in storage:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::storage]\\n#[pallet::getter(fn meta_data)]\\n    pub(super) type MetaDataStore<T: Config> = StorageValue<_, MetaData<T::AccountId, T::Balance>, ValueQuery>;\\n\")), mdx(\"h3\", {\n    \"id\": \"3-configure-genesisconfig-and-genesisbuild\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-configure-genesisconfig-and-genesisbuild\",\n    \"aria-label\": \"3 configure genesisconfig and genesisbuild permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Configure \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"GenesisConfig\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"GenesisBuild\")), mdx(\"h4\", null, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"GenesisConfig\")), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::genesis_config]\"), \" to declare the admin account that you'll use in your to\\ninitialize values from your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MetaData\"), \" struct:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"// Declare `admin` as type `T::AccountId`.\\n#[pallet::genesis_config]\\npub struct GenesisConfig<T: Config> {\\n    pub admin: T::AccountId,\\n    }\\n// Give it a default value.\\n#[cfg(feature = \\\"std\\\")]\\nimpl<T: Config> Default for GenesisConfig<T> {\\n    fn default() -> Self {\\n        Self {\\n            admin: Default::default(),\\n            }\\n        }\\n    }\\n\")), mdx(\"h4\", null, mdx(\"inlineCode\", {\n    parentName: \"h4\"\n  }, \"GenesisBuild\")), mdx(\"p\", null, \"Use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"#[pallet::genesis_build]\"), \" to initialize the values of your struct, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"admin\"), \" to initialize the values\\nof type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T::AccountId\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::genesis_build]\\nimpl<T: Config> GenesisBuild<T> for GenesisConfig<T> {\\n    fn build(&self) {\\n        MetaDataStore::<T>::put(MetaData {\\n            issuance: Zero::zero(),\\n            minter: self.admin.clone(),\\n            burner: self.admin.clone(),\\n        });\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"4-use-the-struct-in-on_initialize\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-use-the-struct-in-on_initialize\",\n    \"aria-label\": \"4 use the struct in on_initialize permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Use the struct in \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"on_initialize()\")), mdx(\"p\", null, \"Assign an amount to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"issuance\"), \" field of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MetaData\"), \" to be initialized when the chain is launched:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"fn on_initialize(_n: T::BlockNumber) -> Weight {\\n    let mut meta = MetaDataStore::<T>::get();\\n    let value: T::Balance = 50u8.into();\\n    meta.issuance = meta.issuance.saturating_add(value);\\n\\n    // Add the amount to the `minter` account in storage.\\n    Accounts::<T>::mutate(&meta.minter, |bal| {\\n        *bal = bal.saturating_add(value);\\n    });\\n\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/substrate-developer-hub/substrate-how-to-guides/blob/d3602a66d66be5b013f2e3330081ea4e0d6dd978/example-code/template-node/pallets/reward-coin/src/lib.rs#L24-L29\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"reward-coin\")), \" example pallet\")), mdx(\"h2\", {\n    \"id\": \"resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#resources\",\n    \"aria-label\": \"resources permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Resources\"), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/sp_std/default/trait.Default.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Default::default()\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-create-a-your-struct","title":"1. Create a your struct"},{"url":"#2-declare-the-struct-as-a-storage-item","title":"2. Declare the struct as a storage item"},{"url":"#3-configure-genesisconfig-and-genesisbuild","title":"3. Configure GenesisConfig and GenesisBuild"},{"url":"#4-use-the-struct-in-on_initialize","title":"4. Use the struct in on_initialize()"}]},{"url":"#examples","title":"Examples"},{"url":"#resources","title":"Resources"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/02-pallet-design/e-storage-value/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/pallet-design/storage-value","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/pallet-design/storage-value/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}