{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/pallet-design/crowdfund/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/pallet-design/crowdfund","title":"Simple Crowdfund","hideNav":null,"difficulty":2,"section":"how to guides","category":"pallet design"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Simple Crowdfund\",\n  \"slug\": \"/how-to-guides/v3/pallet-design/crowdfund\",\n  \"keywords\": \"pallet design, intermediate, runtime, child trie\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"pallet design\",\n  \"difficulty\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Message = makeShortcode(\"Message\");\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Message, {\n    type: \"gray\",\n    title: \"Note\",\n    text: \"This guide assumes that developers know how to \\n  create their own 'Errors' and 'Events' according to the \\n  pallet logic they're creating.\",\n    mdxType: \"Message\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Build a pallet that controls multiple token accounts, storing data in child storage.'\n    }, {\n      title: 'Use Cases',\n      description: \"A simple on-chain crowdfunding app for participants to pool funds towards a common goal.\"\n    }, {\n      title: 'Overview',\n      description: \"Using a child trie provides two advantages over using standard storage. First, it allows for\\n        removing the entirety of the trie is a single storage write when the fund is dispensed or\\n        dissolved. Second, it allows any contributor to prove that they contributed using a Merkle Proof.\\n        This guide demonstrates how to use one trie for each active crowdfund. Any user can start a crowdfund by\\n        specifying a goal amount for the crowdfund, an end time, and a beneficiary who will\\n        receive the pooled funds if the goal is reached by the end time. If the fund is not successful, it enters into a\\n        retirement period when contributors can reclaim their pledged funds. Finally, an unsuccessful fund can be dissolved,\\n        sending any remaining tokens to the user who dissolves it.\"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(Message, {\n    type: \"yellow\",\n    title: \"Information\",\n    text: \"To follow this guide and implement the crowdfunding capabilities in your own pallet,\\n        include the following dependencies in your pallet:\\n            \\n        use frame_support::{pallet_prelude::*, ensure, storage::child,\\n        traits::{Currency, ExistenceRequirement, Get, ReservableCurrency, WithdrawReasons},\\n        sp_runtime::{traits::{AccountIdConversion, Saturating, Zero, Hash},\\n        ModuleId}\\n        };\\n        use frame_system::{pallet_prelude::*, ensure_signed};\\n        use super::*;\\n  \",\n    mdxType: \"Message\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-declaring-your-pallets-configuration-traits\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-declaring-your-pallets-configuration-traits\",\n    \"aria-label\": \"1 declaring your pallets configuration traits permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Declaring your pallet's configuration traits\"), mdx(\"p\", null, \"In addition to the ubiquitous \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Event\"), \" type, this pallet will need:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"Currency\")), \". The currency in which the crowdfunds will be denominated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"SubmissionDeposit\")), \". The amount to be held on deposit by the owner of a crowdfund.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"MinContribution\")), \". The minimum amount that may be contributed into a crowdfund.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"RetirementPeriod\")), \". The period of time in blocks during which contributors are able to\\nwithdraw their funds after an unsuccessful crowdfund ending.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"/// The pallet's configuration trait.\\n#[pallet::config]\\npub trait Config: frame_system::Config {\\n    type Event: From<Event<Self>> + IsType<<Self as frame_system::Config>::Event>;\\n    type Currency: ReservableCurrency<Self::AccountId>;\\n    type SubmissionDeposit: Get<BalanceOf<Self>>;\\n    type MinContribution: Get<BalanceOf<Self>>;\\n    type RetirementPeriod: Get<Self::BlockNumber>;\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-create-a-custom-metadata-struct\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-create-a-custom-metadata-struct\",\n    \"aria-label\": \"2 create a custom metadata struct permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Create a custom metadata struct\"), mdx(\"p\", null, \"Keep track of the constants in your pallet by creating a struct that stores metadata about each fund:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[derive(Encode, Decode, Default, PartialEq, Eq)]\\n#[cfg_attr(feature = \\\"std\\\", derive(Debug))]\\npub struct FundInfo<AccountId, Balance, BlockNumber> {\\n    /// The account that will recieve the funds if the campaign is successful.\\n    beneficiary: AccountId,\\n    /// The amount of deposit placed.\\n    deposit: Balance,\\n    /// The total amount raised.\\n    raised: Balance,\\n    /// Block number after which funding must have succeeded.\\n    end: BlockNumber,\\n    /// Upper bound on `raised`.\\n    goal: Balance,\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"3-declare-your-storage-items\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-declare-your-storage-items\",\n    \"aria-label\": \"3 declare your storage items permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Declare your storage items\"), mdx(\"p\", null, \"Our storage items will need to keep track of which user contributed to what fund as well as how much they contributed. First, deine the following types which will be used to declare our storage items:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub type FundIndex = u32;\\ntype AccountIdOf<T> = <T as frame_system::Config>::AccountId;\\ntype BalanceOf<T> = <<T as Config>::Currency as Currency<AccountIdOf<T>>>::Balance;\\ntype FundInfoOf<T> =\\n        FundInfo<AccountIdOf<T>, BalanceOf<T>, <T as frame_system::Config>::BlockNumber>;\\n\")), mdx(\"p\", null, \"Now, use those types to create one \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StorageMap\"), \" item that tracks the funds by index and a second, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StorageValue\"), \", that keeps track of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FundIndex\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"#[pallet::storage]\\n    #[pallet::getter(fn funds)]\\n    /// Info on all of the funds.\\n    pub(super) type Funds<T: Config> = StorageMap<\\n        _,\\n        Blake2_128Concat,\\n        FundIndex,\\n        FundInfoOf<T>,\\n        OptionQuery,\\n    >;\\n\\n    #[pallet::storage]\\n    #[pallet::getter(fn fund_count)]\\n    /// The total number of funds that have so far been allocated.\\n    pub(super) type FundCount<T: Config> = StorageValue<_, FundIndex, ValueQuery>;\\n\")), mdx(\"h3\", {\n    \"id\": \"4-write-child-trie-api-helper-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-write-child-trie-api-helper-functions\",\n    \"aria-label\": \"4 write child trie api helper functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Write child trie API helper functions\"), mdx(\"p\", null, \"First, we'll need to create a function that provides the pallet's dispatchables with the account ID for the pot of funds. Inside \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"impl<T: Config> Pallet<T>\"), \", write:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"const PALLET_ID: ModuleId = ModuleId(*b\\\"ex/cfund\\\");\\n/**snip**/\\npub fn fund_account_id(index: FundIndex) -> T::AccountId {\\n    PALLET_ID.into_sub_account(index)\\n    }\\n\")), mdx(\"p\", null, \"Then, we'll need to generate unique \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/enum.ChildInfo.html\"\n  }, \"ChildInfo\"), \" IDs:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub fn id_from_index(index: FundIndex) -> child::ChildInfo {\\n    let mut buf = Vec::new();\\n    buf.extend_from_slice(b\\\"crowdfnd\\\");\\n    buf.extend_from_slice(&index.to_le_bytes()[..]);\\n\\n    child::ChildInfo::new_default(T::Hashing::hash(&buf[..]).as_ref())\\n}\\n\")), mdx(\"p\", null, \"Finally, we can write the following helper functions that make use of the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/index.html#functions\"\n  }, \"Child API\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"pub fn contribution_put\")), \": record a contribution in the associated child trie using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/fn.put.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"put\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"pub fn contribution_get\")), \": lookup a contribution in the associated child trie using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/fn.get_or_default.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"get\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"pub fn contribution_kil\")), \": remove a contribution from an associated child trie using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/fn.kill.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"kill\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"pub fn crowdfund_kill\")), \": remove the entire record of contributions in the associated child trie in a single storage write using \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/fn.kill_storage.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"kill_storage\"))))), mdx(\"h3\", {\n    \"id\": \"5-write-your-dispatchable-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#5-write-your-dispatchable-functions\",\n    \"aria-label\": \"5 write your dispatchable functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"5. Write your dispatchable functions\"), mdx(\"p\", null, \"The follow steps outline how to write the dispatchables for this pallet. After various checks within the dispatchables' logic, each function alters the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Funds<T>\"), \" storage map using\\nits \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/rustdocs/latest/frame_support/pallet_prelude/struct.StorageMap.html\"\n  }, \"associated methods\"), \". Our pallet's \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create\"), \" function also makes use of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"FundInfo\"), \" struct created in \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"#2-create-a-custom-metadata-struct\"\n  }, \"step 2\"), \".\"), mdx(\"h4\", null, \"Create a new fund\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fn create\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"create an imbalance variable using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.Currency.html#tymethod.withdraw\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"T::Currency::withdraw\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"update the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Funds\"), \" storage item using the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"FundInfo\"), \" struct from \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#2-create-a-custom-metadata-struct\"\n  }, \"step 2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deposit a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Created\"), \" event\")), mdx(Message, {\n    type: \"green\",\n    title: \"Tip\",\n    text: \"\\nNot yet familiar with using a struct in storage? Refer to [this how-to guide](../storage-value) to\\nlearn how.\\n  \",\n    mdxType: \"Message\"\n  }), mdx(\"h4\", null, \"Contribute funds to an existing fund\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fn contribute\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"perform preliminary safety checks using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ensure!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add the contribution to the fund using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"T::Currency::transfer\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"record the contribution in the child trie using the helper function \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"contribution_put\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deposit a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Contributed\"), \" event\")), mdx(\"h4\", null, \"Withdraw full balance of a contributor to a fund\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fn withdraw\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"perform preliminary safety checks using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ensure!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"return funds by using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.Currency.html#method.resolve_into_existing\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"T::Currency::resolve_into_existing\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"calculate new balances and update storage using child trie helper functions \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"funds\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"contribution_get\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"contribution_kill\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deposit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Withdrew\"), \" event\")), mdx(\"h4\", null, \"Dissolve an entire crowdfund after its retirement period has expired.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fn dissolve\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"perform preliminary safety checks using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ensure!\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"allow dissolver to collect funds by using \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/tokens/currency/trait.Currency.html#method.resolve_creating\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"T::Currency::resolve_creating\")), \" for dissolver to collect funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use the child trie helper function \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"crowdfund_kill\"), \" to remove contributor info from storage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deposit \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Dissolved\"), \" event\")), mdx(\"h4\", null, \"Dispense a payment to the beneficiary of a successful crowdfund\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fn dispense\"), \":\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/tokens/currency/trait.Currency.html#method.resolve_creating\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"T::Currency::resolve_creating\")), \" for beneficiary and caller (separately) to collect funds\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"give initial deposit to account who calls this function as an incentive to clean up storage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"remove the fund from storage using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<Funds<T>>::remove(index);\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Self::crowdfund_kill(index);\"), \" to remove all contributors from storage in a single write\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/substrate-developer-hub/substrate-how-to-guides/blob/main/example-code/template-node/pallets/simple-crowdfund/src/lib.rs#L1\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"pallet_simple_crowdfund\")))), mdx(\"h2\", {\n    \"id\": \"resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#resources\",\n    \"aria-label\": \"resources permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Resources\"), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/traits/trait.Imbalance.html\"\n  }, \"Currency Imbalance trait\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/storage/child/index.html#functions\"\n  }, \"Child trie API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/dispatch/struct.Vec.html#method.extend_from_slice\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"extend_from_slice\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_support/pallet_prelude/trait.Encode.html#method.using_encoded\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"using_encode\")))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-declaring-your-pallets-configuration-traits","title":"1. Declaring your pallet's configuration traits"},{"url":"#2-create-a-custom-metadata-struct","title":"2. Create a custom metadata struct"},{"url":"#3-declare-your-storage-items","title":"3. Declare your storage items"},{"url":"#4-write-child-trie-api-helper-functions","title":"4. Write child trie API helper functions"},{"url":"#5-write-your-dispatchable-functions","title":"5. Write your dispatchable functions"}]},{"url":"#examples","title":"Examples"},{"url":"#resources","title":"Resources"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/02-pallet-design/d-simple-crowdfund/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/pallet-design/crowdfund","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/pallet-design/crowdfund/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}