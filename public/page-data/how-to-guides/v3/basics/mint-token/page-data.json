{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/basics/mint-token/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/basics/mint-token","title":"Primitive Token Mint","hideNav":null,"difficulty":1,"section":"how to guides","category":"basics"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Primitive Token Mint\",\n  \"slug\": \"/how-to-guides/v3/basics/mint-token\",\n  \"keywords\": \"basics, beginner, runtime, tokens\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"basics\",\n  \"difficulty\": 1\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Message = makeShortcode(\"Message\");\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Message, {\n    type: \"yellow\",\n    title: \"Information\",\n    text: \"This is a beginner guide intended for new Substrate developers looking to explore ways to create tokens in Substrate. This approach _is not_ a recommended best practice. Use this guide to learn how to improve upon your runtime logic capabilities and code quality. See the [Examples section](#examples) for practical implementations of this guide.' \",\n    mdxType: \"Message\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Create a simple token mint pallet.'\n    }, {\n      title: 'Use Cases',\n      description: \"Give any account the ability to create a token supply in exchange for native token fee.\"\n    }, {\n      title: 'Overview',\n      description: \"This guide will step you through an effective way to mint a token by leveraging the primitive capabilities that\\n\\t\\t [StorageMap](/rustdocs/latest/frame_support/storage/trait.StorageMap.html) gives us. To achieve this, this \\\"primitive\\\" \\n\\t\\t approach uses the [blake2_128_concat](/v3/runtime/storage#hashing-algorithms) \\n\\t\\t `hasher` to map balances to account IDs, similar to how the [Balances](/rustdocs/latest/pallet_balances/index.html) pallet makes use of it to store \\n\\t\\t and keep track of account balances.\\n\\t    \"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-setup-your-pallets-config-trait\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-setup-your-pallets-config-trait\",\n    \"aria-label\": \"1 setup your pallets config trait permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Setup your pallet's \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"Config\"), \" trait.\"), mdx(\"p\", null, \"Using the Node Template as a starting point, specify the types your pallet depends on and the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/v3/runtime/events-and-errors\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Events\")), \" it emits:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"// The configuration trait\\npub trait Config: system::Config {\\n    type Event: From<Event<Self>> + Into<<Self as frame_system::Config>::Event>;\\n    type Balance: Member + Parameter + AtLeast32BitUnsigned + Default + Copy;\\n}\\n/* --snip-- */\\npub enum Event<T: Config> {\\n    MintedNewSupply(T::AccountId),\\n    Transferred(T::AccountId, T::AccountId, T::Balance),\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-declare-your-storage-item-storagemap\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-declare-your-storage-item-storagemap\",\n    \"aria-label\": \"2 declare your storage item storagemap permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Declare your storage item \", mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"StorageMap\"), \".\"), mdx(\"p\", null, \"This pallet only keeps track of the balance to account ID mapping. Call it \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BalanceToAccount\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"/* --snip-- */\\n    #[pallet::storage]\\n    #[pallet::getter(fn get_balance)]\\n    pub(super) type BalanceToAccount<T: Config> = StorageMap<\\n        _,\\n        Blake2_128Concat,\\n        T::AccountId,\\n        T::Balance,\\n        ValueQuery\\n        >;\\n/* --snip-- */\\n\")), mdx(\"h3\", {\n    \"id\": \"3-create-your-pallets-functions\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#3-create-your-pallets-functions\",\n    \"aria-label\": \"3 create your pallets functions permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"3. Create your pallet\\u2019s functions.\"), mdx(\"p\", null, \"We can now bring our attention to creating the intended capabilities of our pallet with the following functions:\"), mdx(\"p\", null, \"(i) \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mint()\"), \": to issue a token supply from any origin.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"/* --snip-- */\\n#[pallet::weight(10_000 + T::DbWeight::get().writes(1))]\\npub(super) fn mint(\\n    origin: OriginFor<T>,\\n    #[pallet::compact] amount: T::Balance\\n) -> DispatchResultWithPostInfo {\\n\\n    let sender = ensure_signed(origin)?;\\n\\n    // Update storage.\\n    <BalanceToAccount<T>>::insert(&sender, amount);\\n\\n    // Emit an event.\\n    Self::deposit_event(Event::MintedNewSupply(sender));\\n\\n    // Return a successful DispatchResultWithPostInfo.\\n    Ok(().into())\\n}\\n/* --snip-- */\\n\")), mdx(\"p\", null, \"(ii) \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"transfer()\"), \": to allow the minting account to transfer a given balance to another account.\"), mdx(\"h4\", null, \"Define transfer variables\"), mdx(\"p\", null, \"Start with writing out the variables, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"get_balance\"), \" to reference to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StorageMap\"), \" of balances previously\\ndeclared in storage:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"pub(super) fn transfer(\\n            origin: OriginFor<T>,\\n            to: T::AccountId,\\n            #[pallet::compact] amount: T::Balance,\\n        ) -> DispatchResultWithPostInfo {\\n            let sender = ensure_signed(origin)?;\\n            let sender_balance = Self::get_balance(&sender);\\n            let receiver_balance = Self::get_balance(&to);\\n/* --snip-- */\\n\")), mdx(\"h4\", null, \"Verify and add error handling.\"), mdx(\"p\", null, \"When performing balance updates, use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked_sub\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked_add\"), \" to handle potential errors with overflow:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"/* --snip-- */\\n        // Calculate new balances.\\n        let updated_from_balance = sender_balance.checked_sub(value).ok_or(<Error<T>>::InsufficientFunds)?;\\n        let updated_to_balance = receiver_balance.checked_add(value).expect(\\\"Entire supply fits in u64, qed\\\");\\n/* --snip-- */\\n\")), mdx(\"h4\", null, \"Write to storage\"), mdx(\"p\", null, \"Once the new balances are calculated, write their values to storage and deposit the event to the current block:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"            // Write new balances to storage.\\n            <Balances<T>>::insert(&sender, updated_from_balance);\\n            <Balances<T>>::insert(&to, updated_to_balance);\\n\\n            Self::deposit_event(RawEvent::Transfer(sender, to, value));\\n            Ok(())\\n        }\\n/* --snip-- */\\n\")), mdx(\"p\", null, \"If \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked_sub()\"), \" returns \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"None\"), \", the operation caused an overflow and throws an error.\"), mdx(\"h3\", {\n    \"id\": \"4-include-your-pallet-in-your-runtime\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#4-include-your-pallet-in-your-runtime\",\n    \"aria-label\": \"4 include your pallet in your runtime permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"4. Include your pallet in your runtime\"), mdx(\"p\", null, \"Refer to \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"../pallet-integration\"\n  }, \"this guide\"), \" if you\\u2019re not yet familiar with this procedure.\"), mdx(Message, {\n    type: \"green\",\n    title: \"Further Learning\",\n    text: \"\\n  - **Safety.** The mint function takes in an amount to 'mint' which is *not good practice* because it implies that\\n    users have unlimited access to writing to storage. Safer approaches include: using configuring 'GenesisConfig' or\\n    fixing a predetermined maximum value in runtime.\\n  - **Weights.** All the weights were set to 10_000 in the above code snippets. Learn more about weight\\n    configuration in this [basic guide on weights](../weights).\\n  - **Origins.** This guide assumes that the origin will always be the sudo user.\\n    Origins are a powerful capability in Substrate. Learn more about how they work\\n    [here](/v3/runtime/origins).\\n  \",\n    mdxType: \"Message\"\n  }), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/substrate-developer-hub/substrate-how-to-guides/blob/main/example-code/template-node/pallets/mint-token/src/lib.rs\"\n  }, \"mint-token\"), \" example pallet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/substrate-developer-hub/substrate-how-to-guides/blob/main/example-code/template-node/pallets/reward-coin/src/lib.rs\"\n  }, \"reward-coin\"), \" example pallet\")), mdx(\"h2\", {\n    \"id\": \"related-material\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#related-material\",\n    \"aria-label\": \"related material permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Related material\"), mdx(\"h4\", null, \"How-to guides\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"../configurable-constants\"\n  }, \"Configure a runtime constant\"))), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/rustdocs/latest/frame_system/pallet/struct.Pallet.html#method.deposit_event\"\n  }, \"Deposit event method\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-setup-your-pallets-config-trait","title":"1. Setup your pallet's Config trait."},{"url":"#2-declare-your-storage-item-storagemap","title":"2. Declare your storage item StorageMap."},{"url":"#3-create-your-pallets-functions","title":"3. Create your pallet’s functions."},{"url":"#4-include-your-pallet-in-your-runtime","title":"4. Include your pallet in your runtime"}]},{"url":"#examples","title":"Examples"},{"url":"#related-material","title":"Related material"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/01-basics/f-mint-token/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/basics/mint-token","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/basics/mint-token/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}