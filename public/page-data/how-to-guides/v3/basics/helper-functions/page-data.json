{
    "componentChunkName": "component---src-templates-htg-template-tsx",
    "path": "/how-to-guides/v3/basics/helper-functions/",
    "result": {"data":{"mdx":{"frontmatter":{"slug":"/how-to-guides/v3/basics/helper-functions","title":"Using Helper Functions","hideNav":null,"difficulty":2,"section":"how to guides","category":"basics"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Using Helper Functions\",\n  \"slug\": \"/how-to-guides/v3/basics/helper-functions\",\n  \"keywords\": \"basics, runtime\",\n  \"version\": 3,\n  \"section\": \"how to guides\",\n  \"category\": \"basics\",\n  \"difficulty\": 2\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Objectives = makeShortcode(\"Objectives\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Objectives, {\n    data: [{\n      title: 'Goal',\n      description: 'Use helper functions inside a pallet to improve code readability and reusability.'\n    }, {\n      title: 'Use Cases',\n      description: \"Re-use helper functions to perform common \\\"verify\\\" checks across multiple pallets.\"\n    }, {\n      title: 'Overview',\n      description: \"Sometimes a dispatchable function inside a pallet reuses logic that is common to other dispatchables.\\n         In this case, it's useful to refactor this logic into its own private function.\\n         At other times, dispatchable functions get increasingly difficult to read as the amount of code increases\\n         to perform various checks within the dispatchable. In both instances, using helper functions that cannot\\n         be accessed from outside the pallet are a useful tool to optimize for code readability and reusability.\\n         In this guide, we'll see how to create an adder helper that checks for arithmetic overflow\\n         and can be reused in any dispatchable.\"\n    }],\n    mdxType: \"Objectives\"\n  }), mdx(\"h2\", {\n    \"id\": \"steps\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#steps\",\n    \"aria-label\": \"steps permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Steps\"), mdx(\"h3\", {\n    \"id\": \"1-create-your-helper-function\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#1-create-your-helper-function\",\n    \"aria-label\": \"1 create your helper function permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"1. Create your helper function.\"), mdx(\"p\", null, \"The helper we'll refer to is called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fn _adder\"), \". It checks that there is no overflow when adding two integers of type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"u32\"), \".\"), mdx(\"p\", null, \"It takes two \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"u32\"), \" integers, uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"checked_add\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ok_or\"), \" to check that there is no overflow. If there is, it returns an error; otherwise\\nit returns the result.\"), mdx(\"p\", null, \"Here's what it looks like as a helper function. This would go at the bottom of your pallet:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"impl<T: Config> Pallet<T> {\\n    fn _adder(num1: u32, num2: u32) -> Result<u32, &'static str> {\\n        num1.checked_add(num2).ok_or(\\\"Overflow when adding\\\")\\n    }\\n}\\n\")), mdx(\"h3\", {\n    \"id\": \"2-use-it-in-your-dispatchables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#2-use-it-in-your-dispatchables\",\n    \"aria-label\": \"2 use it in your dispatchables permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"2. Use it in your dispatchables.\"), mdx(\"p\", null, \"Identify the places where you need to check for overflow when performing an addition.\\nUse the helper function instead of rewriting the same code. Below is a simple example of\\na dispatchable that allows a signed extrinsic to add a value to the existing storage value:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-rust\"\n  }, \"    // Extrinsics callable from outside the runtime.\\n     #[pallet::call]\\n    impl<T: Config> Pallet<T> {\\n    #[pallet::weight(1_000)]\\n\\n    fn add_value(\\n        origin: OriginFor<T>,\\n        val_to_add: u32\\n        ) -> DispatchResultWithPostInfo {\\n            let _ = ensure_signed(origin)?;\\n\\n            ensure!(val_to_add <= T::MaxAddend::get(), \\\"value must be <= maximum add amount constant\\\");\\n\\n            // previous value got\\n            let c_val = SingleValue::<T>::get();\\n\\n            // checks for overflow when new value added\\n            let result = _adder(c_val, val_to_add);\\n\\n            <SingleValue<T>>::put(result);\\n            Self::deposit_event(Event::Added(c_val, val_to_add, result));\\n            Ok(().into())\\n        }\\n    }\\n\")), mdx(\"h2\", {\n    \"id\": \"examples\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#examples\",\n    \"aria-label\": \"examples permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Examples\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/paritytech/substrate/blob/master/frame/example-offchain-worker/src/lib.rs\"\n  }, \"example-offchain-worker\"), \": the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"add_price\"), \" helper function used in this pallet's dispatchable.\")), mdx(\"h2\", {\n    \"id\": \"resources\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#resources\",\n    \"aria-label\": \"resources permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"className\": \"fill-current text-substrateDark dark:text-white\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Resources\"), mdx(\"h4\", null, \"Rust docs\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://docs.rs/num/0.4.0/num/traits/trait.CheckedAdd.html\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"checked_add\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"num\"), \" crate\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://doc.rust-lang.org/std/option/enum.Option.html#method.ok_or\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"ok_or\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"Option\"), \" crate\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#steps","title":"Steps","items":[{"url":"#1-create-your-helper-function","title":"1. Create your helper function."},{"url":"#2-use-it-in-your-dispatchables","title":"2. Use it in your dispatchables."}]},{"url":"#examples","title":"Examples"},{"url":"#resources","title":"Resources"}]},"fileAbsolutePath":"/Users/a212/Desktop/substrate-docs/v3/how-to-guides/01-basics/e-helper-functions/index.mdx"}},"pageContext":{"slug":"/how-to-guides/v3/basics/helper-functions","version":"3.0","locale":"en","hrefLang":"en-US","originalPath":"/how-to-guides/v3/basics/helper-functions/","dateFormat":"MM/DD/YYYY"}},
    "staticQueryHashes": ["1239077767","1821483254","2966362950","3280999885"]}